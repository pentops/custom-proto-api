// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: j5/config/v1/config.proto

package config_j5pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Plugin int32

const (
	Plugin_PLUGIN_UNSPECIFIED Plugin = 0
	Plugin_PLUGIN_PROTO       Plugin = 1
	Plugin_PLUGIN_J5_CLIENT   Plugin = 2
)

// Enum value maps for Plugin.
var (
	Plugin_name = map[int32]string{
		0: "PLUGIN_UNSPECIFIED",
		1: "PLUGIN_PROTO",
		2: "PLUGIN_J5_CLIENT",
	}
	Plugin_value = map[string]int32{
		"PLUGIN_UNSPECIFIED": 0,
		"PLUGIN_PROTO":       1,
		"PLUGIN_J5_CLIENT":   2,
	}
)

func (x Plugin) Enum() *Plugin {
	p := new(Plugin)
	*p = x
	return p
}

func (x Plugin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Plugin) Descriptor() protoreflect.EnumDescriptor {
	return file_j5_config_v1_config_proto_enumTypes[0].Descriptor()
}

func (Plugin) Type() protoreflect.EnumType {
	return &file_j5_config_v1_config_proto_enumTypes[0]
}

func (x Plugin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Plugin.Descriptor instead.
func (Plugin) EnumDescriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{0}
}

// Config represents the config file (j5.yaml) for a repo.
type RepoConfigFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugins  []*BuildPlugin     `protobuf:"bytes,3,rep,name=plugins,proto3" json:"plugins,omitempty"`
	Generate []*GenerateConfig  `protobuf:"bytes,4,rep,name=generate,proto3" json:"generate,omitempty"`
	Bundles  []*BundleReference `protobuf:"bytes,6,rep,name=bundles,proto3" json:"bundles,omitempty"`
	Git      *GitConfig         `protobuf:"bytes,7,opt,name=git,proto3" json:"git,omitempty"`
	// Inline Bundle
	Registry *RegistryConfig  `protobuf:"bytes,8,opt,name=registry,proto3" json:"registry,omitempty"`
	Packages []*PackageConfig `protobuf:"bytes,9,rep,name=packages,proto3" json:"packages,omitempty"`
	Publish  *PublishConfig   `protobuf:"bytes,10,opt,name=publish,proto3" json:"publish,omitempty"`
	Options  *CodecOptions    `protobuf:"bytes,11,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *RepoConfigFile) Reset() {
	*x = RepoConfigFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoConfigFile) ProtoMessage() {}

func (x *RepoConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoConfigFile.ProtoReflect.Descriptor instead.
func (*RepoConfigFile) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *RepoConfigFile) GetPlugins() []*BuildPlugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *RepoConfigFile) GetGenerate() []*GenerateConfig {
	if x != nil {
		return x.Generate
	}
	return nil
}

func (x *RepoConfigFile) GetBundles() []*BundleReference {
	if x != nil {
		return x.Bundles
	}
	return nil
}

func (x *RepoConfigFile) GetGit() *GitConfig {
	if x != nil {
		return x.Git
	}
	return nil
}

func (x *RepoConfigFile) GetRegistry() *RegistryConfig {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *RepoConfigFile) GetPackages() []*PackageConfig {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *RepoConfigFile) GetPublish() *PublishConfig {
	if x != nil {
		return x.Publish
	}
	return nil
}

func (x *RepoConfigFile) GetOptions() *CodecOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type BundleConfigFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registry *RegistryConfig  `protobuf:"bytes,1,opt,name=registry,proto3" json:"registry,omitempty"`
	Packages []*PackageConfig `protobuf:"bytes,2,rep,name=packages,proto3" json:"packages,omitempty"`
	Publish  *PublishConfig   `protobuf:"bytes,3,opt,name=publish,proto3" json:"publish,omitempty"`
	Options  *CodecOptions    `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *BundleConfigFile) Reset() {
	*x = BundleConfigFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleConfigFile) ProtoMessage() {}

func (x *BundleConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleConfigFile.ProtoReflect.Descriptor instead.
func (*BundleConfigFile) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{1}
}

func (x *BundleConfigFile) GetRegistry() *RegistryConfig {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *BundleConfigFile) GetPackages() []*PackageConfig {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *BundleConfigFile) GetPublish() *PublishConfig {
	if x != nil {
		return x.Publish
	}
	return nil
}

func (x *BundleConfigFile) GetOptions() *CodecOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type BundleReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dir  string   `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
	Deps []string `protobuf:"bytes,3,rep,name=deps,proto3" json:"deps,omitempty"`
}

func (x *BundleReference) Reset() {
	*x = BundleReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleReference) ProtoMessage() {}

func (x *BundleReference) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleReference.ProtoReflect.Descriptor instead.
func (*BundleReference) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{2}
}

func (x *BundleReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BundleReference) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *BundleReference) GetDeps() []string {
	if x != nil {
		return x.Deps
	}
	return nil
}

type PackageConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Prose string `protobuf:"bytes,3,opt,name=prose,proto3" json:"prose,omitempty"`
}

func (x *PackageConfig) Reset() {
	*x = PackageConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageConfig) ProtoMessage() {}

func (x *PackageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageConfig.ProtoReflect.Descriptor instead.
func (*PackageConfig) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{3}
}

func (x *PackageConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PackageConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PackageConfig) GetProse() string {
	if x != nil {
		return x.Prose
	}
	return ""
}

type CodecOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrimSubPackages []string `protobuf:"bytes,1,rep,name=trim_sub_packages,json=trimSubPackages,proto3" json:"trim_sub_packages,omitempty"`
}

func (x *CodecOptions) Reset() {
	*x = CodecOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodecOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodecOptions) ProtoMessage() {}

func (x *CodecOptions) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodecOptions.ProtoReflect.Descriptor instead.
func (*CodecOptions) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{4}
}

func (x *CodecOptions) GetTrimSubPackages() []string {
	if x != nil {
		return x.TrimSubPackages
	}
	return nil
}

// When code is managed through git, configures mapping between git branches,
// tags and commits to output version tags.
type GitConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// used to determine if a commit is the 'latest' or 'main' or 'stable' branch.
	// defaults to /refs/heads/main
	// accepts wildcard *
	// e.g. /refs/heads/main or /refs/tags/v*
	// Will become 'latest' in go mod packages
	Main string `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
}

func (x *GitConfig) Reset() {
	*x = GitConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitConfig) ProtoMessage() {}

func (x *GitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitConfig.ProtoReflect.Descriptor instead.
func (*GitConfig) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{5}
}

func (x *GitConfig) GetMain() string {
	if x != nil {
		return x.Main
	}
	return ""
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Input_Local
	//	*Input_Repo_
	//	*Input_Registry_
	Type isInput_Type `protobuf_oneof:"type"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{6}
}

func (m *Input) GetType() isInput_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Input) GetLocal() string {
	if x, ok := x.GetType().(*Input_Local); ok {
		return x.Local
	}
	return ""
}

func (x *Input) GetRepo() *Input_Repo {
	if x, ok := x.GetType().(*Input_Repo_); ok {
		return x.Repo
	}
	return nil
}

func (x *Input) GetRegistry() *Input_Registry {
	if x, ok := x.GetType().(*Input_Registry_); ok {
		return x.Registry
	}
	return nil
}

type isInput_Type interface {
	isInput_Type()
}

type Input_Local struct {
	Local string `protobuf:"bytes,1,opt,name=local,proto3,oneof"` // name of a local bundle
}

type Input_Repo_ struct {
	Repo *Input_Repo `protobuf:"bytes,2,opt,name=repo,proto3,oneof"`
}

type Input_Registry_ struct {
	Registry *Input_Registry `protobuf:"bytes,3,opt,name=registry,proto3,oneof"`
}

func (*Input_Local) isInput_Type() {}

func (*Input_Repo_) isInput_Type() {}

func (*Input_Registry_) isInput_Type() {}

type PublishConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputFormat *OutputType       `protobuf:"bytes,3,opt,name=output_format,json=outputFormat,proto3" json:"output_format,omitempty"`
	Bundles      []string          `protobuf:"bytes,4,rep,name=bundles,proto3" json:"bundles,omitempty"`
	Opts         map[string]string `protobuf:"bytes,5,rep,name=opts,proto3" json:"opts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Plugins      []*BuildPlugin    `protobuf:"bytes,6,rep,name=plugins,proto3" json:"plugins,omitempty"`
}

func (x *PublishConfig) Reset() {
	*x = PublishConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishConfig) ProtoMessage() {}

func (x *PublishConfig) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishConfig.ProtoReflect.Descriptor instead.
func (*PublishConfig) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{7}
}

func (x *PublishConfig) GetOutputFormat() *OutputType {
	if x != nil {
		return x.OutputFormat
	}
	return nil
}

func (x *PublishConfig) GetBundles() []string {
	if x != nil {
		return x.Bundles
	}
	return nil
}

func (x *PublishConfig) GetOpts() map[string]string {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *PublishConfig) GetPlugins() []*BuildPlugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

type RegistryConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization string `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RegistryConfig) Reset() {
	*x = RegistryConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryConfig) ProtoMessage() {}

func (x *RegistryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryConfig.ProtoReflect.Descriptor instead.
func (*RegistryConfig) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{8}
}

func (x *RegistryConfig) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *RegistryConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GenerateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Inputs  []*Input          `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Opts    map[string]string `protobuf:"bytes,4,rep,name=opts,proto3" json:"opts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Plugins []*BuildPlugin    `protobuf:"bytes,5,rep,name=plugins,proto3" json:"plugins,omitempty"`
	Output  string            `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *GenerateConfig) Reset() {
	*x = GenerateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateConfig) ProtoMessage() {}

func (x *GenerateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateConfig.ProtoReflect.Descriptor instead.
func (*GenerateConfig) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{9}
}

func (x *GenerateConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenerateConfig) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *GenerateConfig) GetOpts() map[string]string {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *GenerateConfig) GetPlugins() []*BuildPlugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *GenerateConfig) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type OutputType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*OutputType_GoProxy_
	Type isOutputType_Type `protobuf_oneof:"type"`
}

func (x *OutputType) Reset() {
	*x = OutputType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputType) ProtoMessage() {}

func (x *OutputType) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputType.ProtoReflect.Descriptor instead.
func (*OutputType) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{10}
}

func (m *OutputType) GetType() isOutputType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *OutputType) GetGoProxy() *OutputType_GoProxy {
	if x, ok := x.GetType().(*OutputType_GoProxy_); ok {
		return x.GoProxy
	}
	return nil
}

type isOutputType_Type interface {
	isOutputType_Type()
}

type OutputType_GoProxy_ struct {
	GoProxy *OutputType_GoProxy `protobuf:"bytes,10,opt,name=go_proxy,json=goProxy,proto3,oneof"`
}

func (*OutputType_GoProxy_) isOutputType_Type() {}

type BuildPlugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// extend the base plugin.
	Base *string `protobuf:"bytes,1,opt,name=base,proto3,oneof" json:"base,omitempty"`
	// the name of this plugin
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type Plugin `protobuf:"varint,3,opt,name=type,proto3,enum=j5.config.v1.Plugin" json:"type,omitempty"`
	// Types that are assignable to Runner:
	//
	//	*BuildPlugin_Docker
	//	*BuildPlugin_Command
	Runner isBuildPlugin_Runner `protobuf_oneof:"runner"`
	Opts   map[string]string    `protobuf:"bytes,7,rep,name=opts,proto3" json:"opts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BuildPlugin) Reset() {
	*x = BuildPlugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildPlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildPlugin) ProtoMessage() {}

func (x *BuildPlugin) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildPlugin.ProtoReflect.Descriptor instead.
func (*BuildPlugin) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{11}
}

func (x *BuildPlugin) GetBase() string {
	if x != nil && x.Base != nil {
		return *x.Base
	}
	return ""
}

func (x *BuildPlugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BuildPlugin) GetType() Plugin {
	if x != nil {
		return x.Type
	}
	return Plugin_PLUGIN_UNSPECIFIED
}

func (m *BuildPlugin) GetRunner() isBuildPlugin_Runner {
	if m != nil {
		return m.Runner
	}
	return nil
}

func (x *BuildPlugin) GetDocker() *DockerSpec {
	if x, ok := x.GetRunner().(*BuildPlugin_Docker); ok {
		return x.Docker
	}
	return nil
}

func (x *BuildPlugin) GetCommand() *CommandSpec {
	if x, ok := x.GetRunner().(*BuildPlugin_Command); ok {
		return x.Command
	}
	return nil
}

func (x *BuildPlugin) GetOpts() map[string]string {
	if x != nil {
		return x.Opts
	}
	return nil
}

type isBuildPlugin_Runner interface {
	isBuildPlugin_Runner()
}

type BuildPlugin_Docker struct {
	// a docker container which will receive stdin and pipe stdout
	// input is google.protobuf.compiler.CodeGeneratorRequest
	// output is google.protobuf.compiler.CodeGeneratorResponse
	Docker *DockerSpec `protobuf:"bytes,4,opt,name=docker,proto3,oneof"`
}

type BuildPlugin_Command struct {
	Command *CommandSpec `protobuf:"bytes,5,opt,name=command,proto3,oneof"`
}

func (*BuildPlugin_Docker) isBuildPlugin_Runner() {}

func (*BuildPlugin_Command) isBuildPlugin_Runner() {}

type DockerSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image      string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Env        []string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty"`
	Entrypoint []string `protobuf:"bytes,4,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Command    []string `protobuf:"bytes,5,rep,name=command,proto3" json:"command,omitempty"`
	Pull       bool     `protobuf:"varint,6,opt,name=pull,proto3" json:"pull,omitempty"`
}

func (x *DockerSpec) Reset() {
	*x = DockerSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerSpec) ProtoMessage() {}

func (x *DockerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerSpec.ProtoReflect.Descriptor instead.
func (*DockerSpec) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{12}
}

func (x *DockerSpec) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DockerSpec) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *DockerSpec) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *DockerSpec) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *DockerSpec) GetPull() bool {
	if x != nil {
		return x.Pull
	}
	return false
}

type CommandSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Args    []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Env     []string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty"`
}

func (x *CommandSpec) Reset() {
	*x = CommandSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandSpec) ProtoMessage() {}

func (x *CommandSpec) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandSpec.ProtoReflect.Descriptor instead.
func (*CommandSpec) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{13}
}

func (x *CommandSpec) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CommandSpec) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CommandSpec) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

// TODO: This currently floats without a config, we need to decide if it belongs
// in the repo config or builder shared config. The complication is that the
// builder has access to all pulled images on the host, so linking this to the
// repo is a bit misleading.
type DockerRegistryAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Matches which images this auth applies to
	// e.g. ghrc.io/* or *.dkr.ecr.*.amazonaws.com/*
	Registry string `protobuf:"bytes,1,opt,name=registry,proto3" json:"registry,omitempty"`
	// Supplies the method for auth.
	// Not retuired if the registry matches a known pattern.
	//
	// Types that are assignable to Auth:
	//
	//	*DockerRegistryAuth_Basic_
	//	*DockerRegistryAuth_AwsEcs
	//	*DockerRegistryAuth_Github_
	Auth isDockerRegistryAuth_Auth `protobuf_oneof:"auth"`
}

func (x *DockerRegistryAuth) Reset() {
	*x = DockerRegistryAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerRegistryAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerRegistryAuth) ProtoMessage() {}

func (x *DockerRegistryAuth) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerRegistryAuth.ProtoReflect.Descriptor instead.
func (*DockerRegistryAuth) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{14}
}

func (x *DockerRegistryAuth) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (m *DockerRegistryAuth) GetAuth() isDockerRegistryAuth_Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (x *DockerRegistryAuth) GetBasic() *DockerRegistryAuth_Basic {
	if x, ok := x.GetAuth().(*DockerRegistryAuth_Basic_); ok {
		return x.Basic
	}
	return nil
}

func (x *DockerRegistryAuth) GetAwsEcs() *DockerRegistryAuth_AWSECS {
	if x, ok := x.GetAuth().(*DockerRegistryAuth_AwsEcs); ok {
		return x.AwsEcs
	}
	return nil
}

func (x *DockerRegistryAuth) GetGithub() *DockerRegistryAuth_Github {
	if x, ok := x.GetAuth().(*DockerRegistryAuth_Github_); ok {
		return x.Github
	}
	return nil
}

type isDockerRegistryAuth_Auth interface {
	isDockerRegistryAuth_Auth()
}

type DockerRegistryAuth_Basic_ struct {
	Basic *DockerRegistryAuth_Basic `protobuf:"bytes,10,opt,name=basic,proto3,oneof"`
}

type DockerRegistryAuth_AwsEcs struct {
	AwsEcs *DockerRegistryAuth_AWSECS `protobuf:"bytes,11,opt,name=aws_ecs,json=awsEcs,proto3,oneof"` // default if *.dkr.ecr.*.amazonaws.com/*
}

type DockerRegistryAuth_Github_ struct {
	Github *DockerRegistryAuth_Github `protobuf:"bytes,12,opt,name=github,proto3,oneof"` // default if ghrc.io/*
}

func (*DockerRegistryAuth_Basic_) isDockerRegistryAuth_Auth() {}

func (*DockerRegistryAuth_AwsEcs) isDockerRegistryAuth_Auth() {}

func (*DockerRegistryAuth_Github_) isDockerRegistryAuth_Auth() {}

type Input_Repo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root   string `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"` // file:// or git://
	Dir    string `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
	Bundle string `protobuf:"bytes,3,opt,name=bundle,proto3" json:"bundle,omitempty"`
}

func (x *Input_Repo) Reset() {
	*x = Input_Repo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input_Repo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input_Repo) ProtoMessage() {}

func (x *Input_Repo) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input_Repo.ProtoReflect.Descriptor instead.
func (*Input_Repo) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Input_Repo) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *Input_Repo) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *Input_Repo) GetBundle() string {
	if x != nil {
		return x.Bundle
	}
	return ""
}

type Input_Registry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization string `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version      string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Input_Registry) Reset() {
	*x = Input_Registry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input_Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input_Registry) ProtoMessage() {}

func (x *Input_Registry) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input_Registry.ProtoReflect.Descriptor instead.
func (*Input_Registry) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Input_Registry) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *Input_Registry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Input_Registry) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// GoProxy serves a go module using the go module proxy protocol
// https://golang.org/cmd/go/#hdr-Module_proxy_protocol
// The 'canonical' URL of the module should be a HTTP page which redirects
// to the registry server, e.g.:
// <meta name="go-import" content="example.org mod https://code.org/moduleproxy">
// This allows the commit info from the source to map directly to the built
// package, where using VCS requires a new commit for the build.
type OutputType_GoProxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                              // e.g. github.com/pentops/o5-go
	GoModFile string `protobuf:"bytes,2,opt,name=go_mod_file,json=goModFile,proto3" json:"go_mod_file,omitempty"` // e.g. ./ext/builder/go.mod
}

func (x *OutputType_GoProxy) Reset() {
	*x = OutputType_GoProxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputType_GoProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputType_GoProxy) ProtoMessage() {}

func (x *OutputType_GoProxy) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputType_GoProxy.ProtoReflect.Descriptor instead.
func (*OutputType_GoProxy) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{10, 0}
}

func (x *OutputType_GoProxy) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OutputType_GoProxy) GetGoModFile() string {
	if x != nil {
		return x.GoModFile
	}
	return ""
}

type DockerRegistryAuth_Basic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username       string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	PasswordEnvVar string `protobuf:"bytes,2,opt,name=password_env_var,json=passwordEnvVar,proto3" json:"password_env_var,omitempty"`
}

func (x *DockerRegistryAuth_Basic) Reset() {
	*x = DockerRegistryAuth_Basic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerRegistryAuth_Basic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerRegistryAuth_Basic) ProtoMessage() {}

func (x *DockerRegistryAuth_Basic) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerRegistryAuth_Basic.ProtoReflect.Descriptor instead.
func (*DockerRegistryAuth_Basic) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{14, 0}
}

func (x *DockerRegistryAuth_Basic) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DockerRegistryAuth_Basic) GetPasswordEnvVar() string {
	if x != nil {
		return x.PasswordEnvVar
	}
	return ""
}

type DockerRegistryAuth_AWSECS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DockerRegistryAuth_AWSECS) Reset() {
	*x = DockerRegistryAuth_AWSECS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerRegistryAuth_AWSECS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerRegistryAuth_AWSECS) ProtoMessage() {}

func (x *DockerRegistryAuth_AWSECS) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerRegistryAuth_AWSECS.ProtoReflect.Descriptor instead.
func (*DockerRegistryAuth_AWSECS) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{14, 1}
}

type DockerRegistryAuth_Github struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenEnvVar string `protobuf:"bytes,1,opt,name=token_env_var,json=tokenEnvVar,proto3" json:"token_env_var,omitempty"` // defaults to GITHUB_TOKEN
}

func (x *DockerRegistryAuth_Github) Reset() {
	*x = DockerRegistryAuth_Github{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_config_v1_config_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerRegistryAuth_Github) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerRegistryAuth_Github) ProtoMessage() {}

func (x *DockerRegistryAuth_Github) ProtoReflect() protoreflect.Message {
	mi := &file_j5_config_v1_config_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerRegistryAuth_Github.ProtoReflect.Descriptor instead.
func (*DockerRegistryAuth_Github) Descriptor() ([]byte, []int) {
	return file_j5_config_v1_config_proto_rawDescGZIP(), []int{14, 2}
}

func (x *DockerRegistryAuth_Github) GetTokenEnvVar() string {
	if x != nil {
		return x.TokenEnvVar
	}
	return ""
}

var File_j5_config_v1_config_proto protoreflect.FileDescriptor

var file_j5_config_v1_config_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6a, 0x35, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6a, 0x35, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x22, 0xc3, 0x03, 0x0a, 0x0e, 0x52, 0x65,
	0x70, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x12, 0x38, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6a,
	0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x03, 0x67, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x67, 0x69, 0x74, 0x12,
	0x38, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x35,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x34, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6a, 0x35, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xf2, 0x01, 0x0a, 0x10, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x37,
	0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x34,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4b, 0x0a, 0x0f, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x70,
	0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f,
	0x73, 0x65, 0x22, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x72, 0x69, 0x6d, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x72, 0x69, 0x6d, 0x53, 0x75, 0x62, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x22, 0x1f,
	0x0a, 0x09, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22,
	0xb7, 0x02, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x70,
	0x6f, 0x12, 0x3a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x1a, 0x44, 0x0a,
	0x04, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x1a, 0x5c, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x0d, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x0d, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x4f, 0x70, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12,
	0x33, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x07, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x4f, 0x70, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x48, 0x0a,
	0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x6f,
	0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x35, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x70, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x1a, 0x37, 0x0a, 0x09, 0x4f, 0x70, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x01,
	0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08,
	0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x47, 0x6f, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x48, 0x00, 0x52, 0x07, 0x67, 0x6f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x1a, 0x3d, 0x0a, 0x07, 0x47,
	0x6f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x6f,
	0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x6f, 0x4d, 0x6f, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0xd4, 0x02, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x35, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x35, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4f, 0x70,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x1a, 0x37, 0x0a,
	0x09, 0x4f, 0x70, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x44, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75,
	0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x75, 0x6c, 0x6c, 0x22, 0x4d,
	0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x76, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x22, 0x86, 0x03,
	0x0a, 0x12, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x12, 0x3e, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x48, 0x00, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x12, 0x42, 0x0a, 0x07, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x63, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x43, 0x53, 0x48, 0x00, 0x52, 0x06, 0x61, 0x77,
	0x73, 0x45, 0x63, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x48, 0x00, 0x52,
	0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x1a, 0x4d, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x1a, 0x08, 0x0a, 0x06, 0x41, 0x57, 0x53, 0x45, 0x43, 0x53,
	0x1a, 0x2c, 0x0a, 0x06, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x42, 0x06,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x2a, 0x48, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x12, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x55, 0x47,
	0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c,
	0x55, 0x47, 0x49, 0x4e, 0x5f, 0x4a, 0x35, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02,
	0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x65, 0x6e, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x6a, 0x35, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6a, 0x35,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x6a, 0x35, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_j5_config_v1_config_proto_rawDescOnce sync.Once
	file_j5_config_v1_config_proto_rawDescData = file_j5_config_v1_config_proto_rawDesc
)

func file_j5_config_v1_config_proto_rawDescGZIP() []byte {
	file_j5_config_v1_config_proto_rawDescOnce.Do(func() {
		file_j5_config_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_j5_config_v1_config_proto_rawDescData)
	})
	return file_j5_config_v1_config_proto_rawDescData
}

var file_j5_config_v1_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_j5_config_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_j5_config_v1_config_proto_goTypes = []any{
	(Plugin)(0),                       // 0: j5.config.v1.Plugin
	(*RepoConfigFile)(nil),            // 1: j5.config.v1.RepoConfigFile
	(*BundleConfigFile)(nil),          // 2: j5.config.v1.BundleConfigFile
	(*BundleReference)(nil),           // 3: j5.config.v1.BundleReference
	(*PackageConfig)(nil),             // 4: j5.config.v1.PackageConfig
	(*CodecOptions)(nil),              // 5: j5.config.v1.CodecOptions
	(*GitConfig)(nil),                 // 6: j5.config.v1.GitConfig
	(*Input)(nil),                     // 7: j5.config.v1.Input
	(*PublishConfig)(nil),             // 8: j5.config.v1.PublishConfig
	(*RegistryConfig)(nil),            // 9: j5.config.v1.RegistryConfig
	(*GenerateConfig)(nil),            // 10: j5.config.v1.GenerateConfig
	(*OutputType)(nil),                // 11: j5.config.v1.OutputType
	(*BuildPlugin)(nil),               // 12: j5.config.v1.BuildPlugin
	(*DockerSpec)(nil),                // 13: j5.config.v1.DockerSpec
	(*CommandSpec)(nil),               // 14: j5.config.v1.CommandSpec
	(*DockerRegistryAuth)(nil),        // 15: j5.config.v1.DockerRegistryAuth
	(*Input_Repo)(nil),                // 16: j5.config.v1.Input.Repo
	(*Input_Registry)(nil),            // 17: j5.config.v1.Input.Registry
	nil,                               // 18: j5.config.v1.PublishConfig.OptsEntry
	nil,                               // 19: j5.config.v1.GenerateConfig.OptsEntry
	(*OutputType_GoProxy)(nil),        // 20: j5.config.v1.OutputType.GoProxy
	nil,                               // 21: j5.config.v1.BuildPlugin.OptsEntry
	(*DockerRegistryAuth_Basic)(nil),  // 22: j5.config.v1.DockerRegistryAuth.Basic
	(*DockerRegistryAuth_AWSECS)(nil), // 23: j5.config.v1.DockerRegistryAuth.AWSECS
	(*DockerRegistryAuth_Github)(nil), // 24: j5.config.v1.DockerRegistryAuth.Github
}
var file_j5_config_v1_config_proto_depIdxs = []int32{
	12, // 0: j5.config.v1.RepoConfigFile.plugins:type_name -> j5.config.v1.BuildPlugin
	10, // 1: j5.config.v1.RepoConfigFile.generate:type_name -> j5.config.v1.GenerateConfig
	3,  // 2: j5.config.v1.RepoConfigFile.bundles:type_name -> j5.config.v1.BundleReference
	6,  // 3: j5.config.v1.RepoConfigFile.git:type_name -> j5.config.v1.GitConfig
	9,  // 4: j5.config.v1.RepoConfigFile.registry:type_name -> j5.config.v1.RegistryConfig
	4,  // 5: j5.config.v1.RepoConfigFile.packages:type_name -> j5.config.v1.PackageConfig
	8,  // 6: j5.config.v1.RepoConfigFile.publish:type_name -> j5.config.v1.PublishConfig
	5,  // 7: j5.config.v1.RepoConfigFile.options:type_name -> j5.config.v1.CodecOptions
	9,  // 8: j5.config.v1.BundleConfigFile.registry:type_name -> j5.config.v1.RegistryConfig
	4,  // 9: j5.config.v1.BundleConfigFile.packages:type_name -> j5.config.v1.PackageConfig
	8,  // 10: j5.config.v1.BundleConfigFile.publish:type_name -> j5.config.v1.PublishConfig
	5,  // 11: j5.config.v1.BundleConfigFile.options:type_name -> j5.config.v1.CodecOptions
	16, // 12: j5.config.v1.Input.repo:type_name -> j5.config.v1.Input.Repo
	17, // 13: j5.config.v1.Input.registry:type_name -> j5.config.v1.Input.Registry
	11, // 14: j5.config.v1.PublishConfig.output_format:type_name -> j5.config.v1.OutputType
	18, // 15: j5.config.v1.PublishConfig.opts:type_name -> j5.config.v1.PublishConfig.OptsEntry
	12, // 16: j5.config.v1.PublishConfig.plugins:type_name -> j5.config.v1.BuildPlugin
	7,  // 17: j5.config.v1.GenerateConfig.inputs:type_name -> j5.config.v1.Input
	19, // 18: j5.config.v1.GenerateConfig.opts:type_name -> j5.config.v1.GenerateConfig.OptsEntry
	12, // 19: j5.config.v1.GenerateConfig.plugins:type_name -> j5.config.v1.BuildPlugin
	20, // 20: j5.config.v1.OutputType.go_proxy:type_name -> j5.config.v1.OutputType.GoProxy
	0,  // 21: j5.config.v1.BuildPlugin.type:type_name -> j5.config.v1.Plugin
	13, // 22: j5.config.v1.BuildPlugin.docker:type_name -> j5.config.v1.DockerSpec
	14, // 23: j5.config.v1.BuildPlugin.command:type_name -> j5.config.v1.CommandSpec
	21, // 24: j5.config.v1.BuildPlugin.opts:type_name -> j5.config.v1.BuildPlugin.OptsEntry
	22, // 25: j5.config.v1.DockerRegistryAuth.basic:type_name -> j5.config.v1.DockerRegistryAuth.Basic
	23, // 26: j5.config.v1.DockerRegistryAuth.aws_ecs:type_name -> j5.config.v1.DockerRegistryAuth.AWSECS
	24, // 27: j5.config.v1.DockerRegistryAuth.github:type_name -> j5.config.v1.DockerRegistryAuth.Github
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_j5_config_v1_config_proto_init() }
func file_j5_config_v1_config_proto_init() {
	if File_j5_config_v1_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_j5_config_v1_config_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RepoConfigFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BundleConfigFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BundleReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PackageConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CodecOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GitConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PublishConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RegistryConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*OutputType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*BuildPlugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DockerSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CommandSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DockerRegistryAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Input_Repo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Input_Registry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*OutputType_GoProxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*DockerRegistryAuth_Basic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*DockerRegistryAuth_AWSECS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_config_v1_config_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*DockerRegistryAuth_Github); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_j5_config_v1_config_proto_msgTypes[6].OneofWrappers = []any{
		(*Input_Local)(nil),
		(*Input_Repo_)(nil),
		(*Input_Registry_)(nil),
	}
	file_j5_config_v1_config_proto_msgTypes[10].OneofWrappers = []any{
		(*OutputType_GoProxy_)(nil),
	}
	file_j5_config_v1_config_proto_msgTypes[11].OneofWrappers = []any{
		(*BuildPlugin_Docker)(nil),
		(*BuildPlugin_Command)(nil),
	}
	file_j5_config_v1_config_proto_msgTypes[14].OneofWrappers = []any{
		(*DockerRegistryAuth_Basic_)(nil),
		(*DockerRegistryAuth_AwsEcs)(nil),
		(*DockerRegistryAuth_Github_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_j5_config_v1_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_j5_config_v1_config_proto_goTypes,
		DependencyIndexes: file_j5_config_v1_config_proto_depIdxs,
		EnumInfos:         file_j5_config_v1_config_proto_enumTypes,
		MessageInfos:      file_j5_config_v1_config_proto_msgTypes,
	}.Build()
	File_j5_config_v1_config_proto = out.File
	file_j5_config_v1_config_proto_rawDesc = nil
	file_j5_config_v1_config_proto_goTypes = nil
	file_j5_config_v1_config_proto_depIdxs = nil
}
