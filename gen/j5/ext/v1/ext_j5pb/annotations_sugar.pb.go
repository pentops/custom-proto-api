// Code generated by protoc-gen-go-sugar. DO NOT EDIT.

package ext_j5pb

import (
	driver "database/sql/driver"
	fmt "fmt"
)

type IsFieldOptions_Type = isFieldOptions_Type

// StringFormat
const (
	StringFormat_UNSPECIFIED StringFormat = 0
	StringFormat_DATE        StringFormat = 1
)

var (
	StringFormat_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "DATE",
	}
	StringFormat_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"DATE":        1,
	}
	StringFormat_value_either = map[string]int32{
		"UNSPECIFIED":               0,
		"STRING_FORMAT_UNSPECIFIED": 0,
		"DATE":                      1,
		"STRING_FORMAT_DATE":        1,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x StringFormat) ShortString() string {
	return StringFormat_name_short[int32(x)]
}
func (x StringFormat) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *StringFormat) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := StringFormat_value_either[strVal]
	*x = StringFormat(val)
	return nil
}
