// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: j5/schema/v1/schema.proto

package schema_j5pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Float_Format int32

const (
	Float_FORMAT_UNSPECIFIED Float_Format = 0
	Float_FORMAT_FLOAT32     Float_Format = 1
	Float_FORMAT_FLOAT64     Float_Format = 2
)

// Enum value maps for Float_Format.
var (
	Float_Format_name = map[int32]string{
		0: "FORMAT_UNSPECIFIED",
		1: "FORMAT_FLOAT32",
		2: "FORMAT_FLOAT64",
	}
	Float_Format_value = map[string]int32{
		"FORMAT_UNSPECIFIED": 0,
		"FORMAT_FLOAT32":     1,
		"FORMAT_FLOAT64":     2,
	}
)

func (x Float_Format) Enum() *Float_Format {
	p := new(Float_Format)
	*p = x
	return p
}

func (x Float_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Float_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_j5_schema_v1_schema_proto_enumTypes[0].Descriptor()
}

func (Float_Format) Type() protoreflect.EnumType {
	return &file_j5_schema_v1_schema_proto_enumTypes[0]
}

func (x Float_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Float_Format.Descriptor instead.
func (Float_Format) EnumDescriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{11, 0}
}

type Integer_Format int32

const (
	Integer_FORMAT_UNSPECIFIED Integer_Format = 0
	Integer_FORMAT_INT32       Integer_Format = 1
	Integer_FORMAT_INT64       Integer_Format = 2
	Integer_FORMAT_UINT32      Integer_Format = 3
	Integer_FORMAT_UINT64      Integer_Format = 4
)

// Enum value maps for Integer_Format.
var (
	Integer_Format_name = map[int32]string{
		0: "FORMAT_UNSPECIFIED",
		1: "FORMAT_INT32",
		2: "FORMAT_INT64",
		3: "FORMAT_UINT32",
		4: "FORMAT_UINT64",
	}
	Integer_Format_value = map[string]int32{
		"FORMAT_UNSPECIFIED": 0,
		"FORMAT_INT32":       1,
		"FORMAT_INT64":       2,
		"FORMAT_UINT32":      3,
		"FORMAT_UINT64":      4,
	}
)

func (x Integer_Format) Enum() *Integer_Format {
	p := new(Integer_Format)
	*p = x
	return p
}

func (x Integer_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Integer_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_j5_schema_v1_schema_proto_enumTypes[1].Descriptor()
}

func (Integer_Format) Type() protoreflect.EnumType {
	return &file_j5_schema_v1_schema_proto_enumTypes[1]
}

func (x Integer_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Integer_Format.Descriptor instead.
func (Integer_Format) EnumDescriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{12, 0}
}

type RootSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*RootSchema_Oneof
	//	*RootSchema_Object
	//	*RootSchema_Enum
	Type isRootSchema_Type `protobuf_oneof:"type"`
}

func (x *RootSchema) Reset() {
	*x = RootSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootSchema) ProtoMessage() {}

func (x *RootSchema) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootSchema.ProtoReflect.Descriptor instead.
func (*RootSchema) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{0}
}

func (m *RootSchema) GetType() isRootSchema_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *RootSchema) GetOneof() *Oneof {
	if x, ok := x.GetType().(*RootSchema_Oneof); ok {
		return x.Oneof
	}
	return nil
}

func (x *RootSchema) GetObject() *Object {
	if x, ok := x.GetType().(*RootSchema_Object); ok {
		return x.Object
	}
	return nil
}

func (x *RootSchema) GetEnum() *Enum {
	if x, ok := x.GetType().(*RootSchema_Enum); ok {
		return x.Enum
	}
	return nil
}

type isRootSchema_Type interface {
	isRootSchema_Type()
}

type RootSchema_Oneof struct {
	// Named Root Types
	Oneof *Oneof `protobuf:"bytes,12,opt,name=oneof,proto3,oneof"`
}

type RootSchema_Object struct {
	Object *Object `protobuf:"bytes,21,opt,name=object,proto3,oneof"`
}

type RootSchema_Enum struct {
	Enum *Enum `protobuf:"bytes,32,opt,name=enum,proto3,oneof"`
}

func (*RootSchema_Oneof) isRootSchema_Type() {}

func (*RootSchema_Object) isRootSchema_Type() {}

func (*RootSchema_Enum) isRootSchema_Type() {}

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Schema_Any
	//	*Schema_Oneof
	//	*Schema_Object
	//	*Schema_Enum
	//	*Schema_Array
	//	*Schema_Map
	//	*Schema_String_
	//	*Schema_Integer
	//	*Schema_Float
	//	*Schema_Boolean
	Type isSchema_Type `protobuf_oneof:"type"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{1}
}

func (m *Schema) GetType() isSchema_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Schema) GetAny() *Any {
	if x, ok := x.GetType().(*Schema_Any); ok {
		return x.Any
	}
	return nil
}

func (x *Schema) GetOneof() *OneofAsField {
	if x, ok := x.GetType().(*Schema_Oneof); ok {
		return x.Oneof
	}
	return nil
}

func (x *Schema) GetObject() *ObjectAsField {
	if x, ok := x.GetType().(*Schema_Object); ok {
		return x.Object
	}
	return nil
}

func (x *Schema) GetEnum() *EnumAsField {
	if x, ok := x.GetType().(*Schema_Enum); ok {
		return x.Enum
	}
	return nil
}

func (x *Schema) GetArray() *Array {
	if x, ok := x.GetType().(*Schema_Array); ok {
		return x.Array
	}
	return nil
}

func (x *Schema) GetMap() *Map {
	if x, ok := x.GetType().(*Schema_Map); ok {
		return x.Map
	}
	return nil
}

func (x *Schema) GetString_() *String {
	if x, ok := x.GetType().(*Schema_String_); ok {
		return x.String_
	}
	return nil
}

func (x *Schema) GetInteger() *Integer {
	if x, ok := x.GetType().(*Schema_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *Schema) GetFloat() *Float {
	if x, ok := x.GetType().(*Schema_Float); ok {
		return x.Float
	}
	return nil
}

func (x *Schema) GetBoolean() *Boolean {
	if x, ok := x.GetType().(*Schema_Boolean); ok {
		return x.Boolean
	}
	return nil
}

type isSchema_Type interface {
	isSchema_Type()
}

type Schema_Any struct {
	// Special Cases
	Any *Any `protobuf:"bytes,11,opt,name=any,proto3,oneof"`
}

type Schema_Oneof struct {
	// Named Root Types, wrapped as Field to separate the object-property rules
	// from the type itself.
	Oneof *OneofAsField `protobuf:"bytes,12,opt,name=oneof,proto3,oneof"`
}

type Schema_Object struct {
	Object *ObjectAsField `protobuf:"bytes,21,opt,name=object,proto3,oneof"`
}

type Schema_Enum struct {
	Enum *EnumAsField `protobuf:"bytes,32,opt,name=enum,proto3,oneof"`
}

type Schema_Array struct {
	// Complex Types
	Array *Array `protobuf:"bytes,20,opt,name=array,proto3,oneof"`
}

type Schema_Map struct {
	Map *Map `protobuf:"bytes,22,opt,name=map,proto3,oneof"`
}

type Schema_String_ struct {
	// Scalar Types
	String_ *String `protobuf:"bytes,30,opt,name=string,proto3,oneof"`
}

type Schema_Integer struct {
	Integer *Integer `protobuf:"bytes,31,opt,name=integer,proto3,oneof"`
}

type Schema_Float struct {
	Float *Float `protobuf:"bytes,33,opt,name=float,proto3,oneof"`
}

type Schema_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,34,opt,name=boolean,proto3,oneof"`
}

func (*Schema_Any) isSchema_Type() {}

func (*Schema_Oneof) isSchema_Type() {}

func (*Schema_Object) isSchema_Type() {}

func (*Schema_Enum) isSchema_Type() {}

func (*Schema_Array) isSchema_Type() {}

func (*Schema_Map) isSchema_Type() {}

func (*Schema_String_) isSchema_Type() {}

func (*Schema_Integer) isSchema_Type() {}

func (*Schema_Float) isSchema_Type() {}

func (*Schema_Boolean) isSchema_Type() {}

type Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package string `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	Schema  string `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *Ref) Reset() {
	*x = Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref) ProtoMessage() {}

func (x *Ref) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref.ProtoReflect.Descriptor instead.
func (*Ref) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{2}
}

func (x *Ref) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *Ref) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

// Allows anything
type Any struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Any) Reset() {
	*x = Any{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Any) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any) ProtoMessage() {}

func (x *Any) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any.ProtoReflect.Descriptor instead.
func (*Any) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{3}
}

// ObjectAsField is an object as-a-field in an ObjectProperty
type ObjectAsField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Schema:
	//
	//	*ObjectAsField_Ref
	//	*ObjectAsField_Object
	Schema               isObjectAsField_Schema `protobuf_oneof:"schema"`
	AdditionalProperties bool                   `protobuf:"varint,4,opt,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty"`
	Rules                *ObjectAsField_Rules   `protobuf:"bytes,5,opt,name=rules,proto3" json:"rules,omitempty"`
	PrimaryKey           *string                `protobuf:"bytes,6,opt,name=primary_key,json=primaryKey,proto3,oneof" json:"primary_key,omitempty"`
}

func (x *ObjectAsField) Reset() {
	*x = ObjectAsField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectAsField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectAsField) ProtoMessage() {}

func (x *ObjectAsField) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectAsField.ProtoReflect.Descriptor instead.
func (*ObjectAsField) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{4}
}

func (m *ObjectAsField) GetSchema() isObjectAsField_Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (x *ObjectAsField) GetRef() *Ref {
	if x, ok := x.GetSchema().(*ObjectAsField_Ref); ok {
		return x.Ref
	}
	return nil
}

func (x *ObjectAsField) GetObject() *Object {
	if x, ok := x.GetSchema().(*ObjectAsField_Object); ok {
		return x.Object
	}
	return nil
}

func (x *ObjectAsField) GetAdditionalProperties() bool {
	if x != nil {
		return x.AdditionalProperties
	}
	return false
}

func (x *ObjectAsField) GetRules() *ObjectAsField_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ObjectAsField) GetPrimaryKey() string {
	if x != nil && x.PrimaryKey != nil {
		return *x.PrimaryKey
	}
	return ""
}

type isObjectAsField_Schema interface {
	isObjectAsField_Schema()
}

type ObjectAsField_Ref struct {
	Ref *Ref `protobuf:"bytes,1,opt,name=ref,proto3,oneof"`
}

type ObjectAsField_Object struct {
	Object *Object `protobuf:"bytes,2,opt,name=object,proto3,oneof"`
}

func (*ObjectAsField_Ref) isObjectAsField_Schema() {}

func (*ObjectAsField_Object) isObjectAsField_Schema() {}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Properties  []*ObjectProperty `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{5}
}

func (x *Object) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Object) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Object) GetProperties() []*ObjectProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

type OneofAsField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Schema:
	//
	//	*OneofAsField_Ref
	//	*OneofAsField_Oneof
	Schema isOneofAsField_Schema `protobuf_oneof:"schema"`
	Rules  *OneofAsField_Rules   `protobuf:"bytes,4,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *OneofAsField) Reset() {
	*x = OneofAsField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneofAsField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofAsField) ProtoMessage() {}

func (x *OneofAsField) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofAsField.ProtoReflect.Descriptor instead.
func (*OneofAsField) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{6}
}

func (m *OneofAsField) GetSchema() isOneofAsField_Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (x *OneofAsField) GetRef() *Ref {
	if x, ok := x.GetSchema().(*OneofAsField_Ref); ok {
		return x.Ref
	}
	return nil
}

func (x *OneofAsField) GetOneof() *Oneof {
	if x, ok := x.GetSchema().(*OneofAsField_Oneof); ok {
		return x.Oneof
	}
	return nil
}

func (x *OneofAsField) GetRules() *OneofAsField_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type isOneofAsField_Schema interface {
	isOneofAsField_Schema()
}

type OneofAsField_Ref struct {
	Ref *Ref `protobuf:"bytes,1,opt,name=ref,proto3,oneof"`
}

type OneofAsField_Oneof struct {
	Oneof *Oneof `protobuf:"bytes,2,opt,name=oneof,proto3,oneof"`
}

func (*OneofAsField_Ref) isOneofAsField_Schema() {}

func (*OneofAsField_Oneof) isOneofAsField_Schema() {}

// Similar to ObjectItem (it is an object in JSON Schema), but where exactly one
// property should be set
type Oneof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Properties  []*ObjectProperty `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Oneof) Reset() {
	*x = Oneof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Oneof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oneof) ProtoMessage() {}

func (x *Oneof) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oneof.ProtoReflect.Descriptor instead.
func (*Oneof) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{7}
}

func (x *Oneof) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Oneof) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Oneof) GetProperties() []*ObjectProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

type EnumAsField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Schema:
	//
	//	*EnumAsField_Ref
	//	*EnumAsField_Enum
	Schema isEnumAsField_Schema `protobuf_oneof:"schema"`
	Rules  *EnumAsField_Rules   `protobuf:"bytes,4,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *EnumAsField) Reset() {
	*x = EnumAsField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumAsField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumAsField) ProtoMessage() {}

func (x *EnumAsField) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumAsField.ProtoReflect.Descriptor instead.
func (*EnumAsField) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{8}
}

func (m *EnumAsField) GetSchema() isEnumAsField_Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (x *EnumAsField) GetRef() *Ref {
	if x, ok := x.GetSchema().(*EnumAsField_Ref); ok {
		return x.Ref
	}
	return nil
}

func (x *EnumAsField) GetEnum() *Enum {
	if x, ok := x.GetSchema().(*EnumAsField_Enum); ok {
		return x.Enum
	}
	return nil
}

func (x *EnumAsField) GetRules() *EnumAsField_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type isEnumAsField_Schema interface {
	isEnumAsField_Schema()
}

type EnumAsField_Ref struct {
	Ref *Ref `protobuf:"bytes,1,opt,name=ref,proto3,oneof"`
}

type EnumAsField_Enum struct {
	Enum *Enum `protobuf:"bytes,2,opt,name=enum,proto3,oneof"`
}

func (*EnumAsField_Ref) isEnumAsField_Schema() {}

func (*EnumAsField_Enum) isEnumAsField_Schema() {}

type Enum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Prefix      string        `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Options     []*Enum_Value `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Enum) Reset() {
	*x = Enum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enum) ProtoMessage() {}

func (x *Enum) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enum.ProtoReflect.Descriptor instead.
func (*Enum) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{9}
}

func (x *Enum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Enum) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Enum) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Enum) GetOptions() []*Enum_Value {
	if x != nil {
		return x.Options
	}
	return nil
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format *string       `protobuf:"bytes,1,opt,name=format,proto3,oneof" json:"format,omitempty"`
	Rules  *String_Rules `protobuf:"bytes,3,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{10}
}

func (x *String) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *String) GetRules() *String_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Float struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format Float_Format `protobuf:"varint,1,opt,name=format,proto3,enum=j5.schema.v1.Float_Format" json:"format,omitempty"`
	Rules  *Float_Rules `protobuf:"bytes,2,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *Float) Reset() {
	*x = Float{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Float) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Float) ProtoMessage() {}

func (x *Float) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Float.ProtoReflect.Descriptor instead.
func (*Float) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{11}
}

func (x *Float) GetFormat() Float_Format {
	if x != nil {
		return x.Format
	}
	return Float_FORMAT_UNSPECIFIED
}

func (x *Float) GetRules() *Float_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Integer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format Integer_Format `protobuf:"varint,1,opt,name=format,proto3,enum=j5.schema.v1.Integer_Format" json:"format,omitempty"`
	Rules  *Integer_Rules `protobuf:"bytes,2,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *Integer) Reset() {
	*x = Integer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integer) ProtoMessage() {}

func (x *Integer) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integer.ProtoReflect.Descriptor instead.
func (*Integer) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{12}
}

func (x *Integer) GetFormat() Integer_Format {
	if x != nil {
		return x.Format
	}
	return Integer_FORMAT_UNSPECIFIED
}

func (x *Integer) GetRules() *Integer_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Boolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules *Boolean_Rules `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{13}
}

func (x *Boolean) GetRules() *Boolean_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Array struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules *Array_Rules `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
	Items *Schema      `protobuf:"bytes,2,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *Array) Reset() {
	*x = Array{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Array) ProtoMessage() {}

func (x *Array) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Array.ProtoReflect.Descriptor instead.
func (*Array) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{14}
}

func (x *Array) GetRules() *Array_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Array) GetItems() *Schema {
	if x != nil {
		return x.Items
	}
	return nil
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemSchema *Schema    `protobuf:"bytes,1,opt,name=item_schema,json=itemSchema,proto3" json:"item_schema,omitempty"`
	KeySchema  *Schema    `protobuf:"bytes,2,opt,name=key_schema,json=keySchema,proto3" json:"key_schema,omitempty"`
	Rules      *Map_Rules `protobuf:"bytes,3,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{15}
}

func (x *Map) GetItemSchema() *Schema {
	if x != nil {
		return x.ItemSchema
	}
	return nil
}

func (x *Map) GetKeySchema() *Schema {
	if x != nil {
		return x.KeySchema
	}
	return nil
}

func (x *Map) GetRules() *Map_Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type ObjectProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema             *Schema `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Name               string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Required           bool    `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	ExplicitlyOptional bool    `protobuf:"varint,5,opt,name=explicitly_optional,json=explicitlyOptional,proto3" json:"explicitly_optional,omitempty"`
	ReadOnly           bool    `protobuf:"varint,6,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	WriteOnly          bool    `protobuf:"varint,7,opt,name=write_only,json=writeOnly,proto3" json:"write_only,omitempty"`
	Description        string  `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	// For flattened objects,
	// Defines the path from the root proto message to the field. All but the last
	// node will be message fields holding a message kind, and the last node is
	// the field containing the property type.
	ProtoField []int32 `protobuf:"varint,11,rep,packed,name=proto_field,json=protoField,proto3" json:"proto_field,omitempty"`
}

func (x *ObjectProperty) Reset() {
	*x = ObjectProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectProperty) ProtoMessage() {}

func (x *ObjectProperty) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectProperty.ProtoReflect.Descriptor instead.
func (*ObjectProperty) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{16}
}

func (x *ObjectProperty) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *ObjectProperty) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectProperty) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ObjectProperty) GetExplicitlyOptional() bool {
	if x != nil {
		return x.ExplicitlyOptional
	}
	return false
}

func (x *ObjectProperty) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *ObjectProperty) GetWriteOnly() bool {
	if x != nil {
		return x.WriteOnly
	}
	return false
}

func (x *ObjectProperty) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ObjectProperty) GetProtoField() []int32 {
	if x != nil {
		return x.ProtoField
	}
	return nil
}

type ObjectAsField_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinProperties *uint64 `protobuf:"varint,1,opt,name=min_properties,json=minProperties,proto3,oneof" json:"min_properties,omitempty"`
	MaxProperties *uint64 `protobuf:"varint,2,opt,name=max_properties,json=maxProperties,proto3,oneof" json:"max_properties,omitempty"`
}

func (x *ObjectAsField_Rules) Reset() {
	*x = ObjectAsField_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectAsField_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectAsField_Rules) ProtoMessage() {}

func (x *ObjectAsField_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectAsField_Rules.ProtoReflect.Descriptor instead.
func (*ObjectAsField_Rules) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ObjectAsField_Rules) GetMinProperties() uint64 {
	if x != nil && x.MinProperties != nil {
		return *x.MinProperties
	}
	return 0
}

func (x *ObjectAsField_Rules) GetMaxProperties() uint64 {
	if x != nil && x.MaxProperties != nil {
		return *x.MaxProperties
	}
	return 0
}

type OneofAsField_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OneofAsField_Rules) Reset() {
	*x = OneofAsField_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneofAsField_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofAsField_Rules) ProtoMessage() {}

func (x *OneofAsField_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofAsField_Rules.ProtoReflect.Descriptor instead.
func (*OneofAsField_Rules) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{6, 0}
}

type EnumAsField_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnumAsField_Rules) Reset() {
	*x = EnumAsField_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumAsField_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumAsField_Rules) ProtoMessage() {}

func (x *EnumAsField_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumAsField_Rules.ProtoReflect.Descriptor instead.
func (*EnumAsField_Rules) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{8, 0}
}

type Enum_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number      int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Enum_Value) Reset() {
	*x = Enum_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enum_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enum_Value) ProtoMessage() {}

func (x *Enum_Value) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enum_Value.ProtoReflect.Descriptor instead.
func (*Enum_Value) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Enum_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Enum_Value) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Enum_Value) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type String_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pattern   *string `protobuf:"bytes,1,opt,name=pattern,proto3,oneof" json:"pattern,omitempty"`
	MinLength *uint64 `protobuf:"varint,2,opt,name=min_length,json=minLength,proto3,oneof" json:"min_length,omitempty"`
	MaxLength *uint64 `protobuf:"varint,3,opt,name=max_length,json=maxLength,proto3,oneof" json:"max_length,omitempty"`
}

func (x *String_Rules) Reset() {
	*x = String_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String_Rules) ProtoMessage() {}

func (x *String_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String_Rules.ProtoReflect.Descriptor instead.
func (*String_Rules) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{10, 0}
}

func (x *String_Rules) GetPattern() string {
	if x != nil && x.Pattern != nil {
		return *x.Pattern
	}
	return ""
}

func (x *String_Rules) GetMinLength() uint64 {
	if x != nil && x.MinLength != nil {
		return *x.MinLength
	}
	return 0
}

func (x *String_Rules) GetMaxLength() uint64 {
	if x != nil && x.MaxLength != nil {
		return *x.MaxLength
	}
	return 0
}

type Float_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExclusiveMaximum *bool    `protobuf:"varint,1,opt,name=exclusive_maximum,json=exclusiveMaximum,proto3,oneof" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum *bool    `protobuf:"varint,2,opt,name=exclusive_minimum,json=exclusiveMinimum,proto3,oneof" json:"exclusive_minimum,omitempty"`
	Minimum          *float64 `protobuf:"fixed64,3,opt,name=minimum,proto3,oneof" json:"minimum,omitempty"`
	Maximum          *float64 `protobuf:"fixed64,4,opt,name=maximum,proto3,oneof" json:"maximum,omitempty"`
	MultipleOf       *float64 `protobuf:"fixed64,5,opt,name=multiple_of,json=multipleOf,proto3,oneof" json:"multiple_of,omitempty"`
}

func (x *Float_Rules) Reset() {
	*x = Float_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Float_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Float_Rules) ProtoMessage() {}

func (x *Float_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Float_Rules.ProtoReflect.Descriptor instead.
func (*Float_Rules) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Float_Rules) GetExclusiveMaximum() bool {
	if x != nil && x.ExclusiveMaximum != nil {
		return *x.ExclusiveMaximum
	}
	return false
}

func (x *Float_Rules) GetExclusiveMinimum() bool {
	if x != nil && x.ExclusiveMinimum != nil {
		return *x.ExclusiveMinimum
	}
	return false
}

func (x *Float_Rules) GetMinimum() float64 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return 0
}

func (x *Float_Rules) GetMaximum() float64 {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return 0
}

func (x *Float_Rules) GetMultipleOf() float64 {
	if x != nil && x.MultipleOf != nil {
		return *x.MultipleOf
	}
	return 0
}

type Integer_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExclusiveMaximum *bool  `protobuf:"varint,1,opt,name=exclusive_maximum,json=exclusiveMaximum,proto3,oneof" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum *bool  `protobuf:"varint,2,opt,name=exclusive_minimum,json=exclusiveMinimum,proto3,oneof" json:"exclusive_minimum,omitempty"`
	Minimum          *int64 `protobuf:"varint,3,opt,name=minimum,proto3,oneof" json:"minimum,omitempty"`
	Maximum          *int64 `protobuf:"varint,4,opt,name=maximum,proto3,oneof" json:"maximum,omitempty"`
	MultipleOf       *int64 `protobuf:"varint,5,opt,name=multiple_of,json=multipleOf,proto3,oneof" json:"multiple_of,omitempty"`
}

func (x *Integer_Rules) Reset() {
	*x = Integer_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integer_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integer_Rules) ProtoMessage() {}

func (x *Integer_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integer_Rules.ProtoReflect.Descriptor instead.
func (*Integer_Rules) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Integer_Rules) GetExclusiveMaximum() bool {
	if x != nil && x.ExclusiveMaximum != nil {
		return *x.ExclusiveMaximum
	}
	return false
}

func (x *Integer_Rules) GetExclusiveMinimum() bool {
	if x != nil && x.ExclusiveMinimum != nil {
		return *x.ExclusiveMinimum
	}
	return false
}

func (x *Integer_Rules) GetMinimum() int64 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return 0
}

func (x *Integer_Rules) GetMaximum() int64 {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return 0
}

func (x *Integer_Rules) GetMultipleOf() int64 {
	if x != nil && x.MultipleOf != nil {
		return *x.MultipleOf
	}
	return 0
}

type Boolean_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Const *bool `protobuf:"varint,1,opt,name=const,proto3,oneof" json:"const,omitempty"`
}

func (x *Boolean_Rules) Reset() {
	*x = Boolean_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boolean_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean_Rules) ProtoMessage() {}

func (x *Boolean_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean_Rules.ProtoReflect.Descriptor instead.
func (*Boolean_Rules) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Boolean_Rules) GetConst() bool {
	if x != nil && x.Const != nil {
		return *x.Const
	}
	return false
}

type Array_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinItems    *uint64 `protobuf:"varint,1,opt,name=min_items,json=minItems,proto3,oneof" json:"min_items,omitempty"`
	MaxItems    *uint64 `protobuf:"varint,2,opt,name=max_items,json=maxItems,proto3,oneof" json:"max_items,omitempty"`
	UniqueItems *bool   `protobuf:"varint,3,opt,name=unique_items,json=uniqueItems,proto3,oneof" json:"unique_items,omitempty"`
}

func (x *Array_Rules) Reset() {
	*x = Array_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Array_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Array_Rules) ProtoMessage() {}

func (x *Array_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Array_Rules.ProtoReflect.Descriptor instead.
func (*Array_Rules) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{14, 0}
}

func (x *Array_Rules) GetMinItems() uint64 {
	if x != nil && x.MinItems != nil {
		return *x.MinItems
	}
	return 0
}

func (x *Array_Rules) GetMaxItems() uint64 {
	if x != nil && x.MaxItems != nil {
		return *x.MaxItems
	}
	return 0
}

func (x *Array_Rules) GetUniqueItems() bool {
	if x != nil && x.UniqueItems != nil {
		return *x.UniqueItems
	}
	return false
}

type Map_Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Map_Rules) Reset() {
	*x = Map_Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_schema_v1_schema_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_Rules) ProtoMessage() {}

func (x *Map_Rules) ProtoReflect() protoreflect.Message {
	mi := &file_j5_schema_v1_schema_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_Rules.ProtoReflect.Descriptor instead.
func (*Map_Rules) Descriptor() ([]byte, []int) {
	return file_j5_schema_v1_schema_proto_rawDescGZIP(), []int{15, 0}
}

var File_j5_schema_v1_schema_proto protoreflect.FileDescriptor

var file_j5_schema_v1_schema_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6a, 0x35, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6a, 0x35, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x52, 0x6f,
	0x6f, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x48, 0x00, 0x52, 0x05,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x42,
	0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xea, 0x03, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x25, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6e, 0x79, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x6f, 0x6e, 0x65,
	0x6f, 0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x41, 0x73, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x35, 0x0a,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x41, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x00, 0x52,
	0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x05, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x25, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x70, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x35, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x07, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x35, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x05,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x35,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x62, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x35, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x42, 0x06, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x37, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x05, 0x0a,
	0x03, 0x41, 0x6e, 0x79, 0x22, 0x9c, 0x03, 0x0a, 0x0d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41,
	0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x2e, 0x0a,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x33, 0x0a,
	0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x88, 0x01,
	0x01, 0x1a, 0x85, 0x01, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x6d,
	0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x01, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x6b, 0x65, 0x79, 0x22, 0x7c, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x22, 0xad, 0x01, 0x0a, 0x0c, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x41, 0x73, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x66, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x6e, 0x65,
	0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x48, 0x00, 0x52,
	0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x36, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x41, 0x73, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x07,
	0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x22, 0x7b, 0x0a, 0x05, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xa8,
	0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x25,
	0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x35,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x48, 0x00,
	0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x28, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12,
	0x35, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x41, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0xdf, 0x01, 0x0a, 0x04, 0x45, 0x6e,
	0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x32, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x55, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfd, 0x01, 0x0a, 0x06,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x98, 0x01, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xdc, 0x03, 0x0a, 0x05,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0xa3, 0x02, 0x0a, 0x05, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x01, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x0a, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x66, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6f, 0x66,
	0x22, 0x48, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x46, 0x4c, 0x4f,
	0x41, 0x54, 0x33, 0x32, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x36, 0x34, 0x10, 0x02, 0x22, 0x84, 0x04, 0x0a, 0x07, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x31, 0x0a, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x35,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a,
	0xa3, 0x02, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02,
	0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52,
	0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x66, 0x88, 0x01,
	0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x22, 0x6a, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x16, 0x0a, 0x12, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x5f, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x03, 0x12, 0x11,
	0x0a, 0x0d, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10,
	0x04, 0x22, 0x6a, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x31, 0x0a, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x35,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65,
	0x61, 0x6e, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a,
	0x2c, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x22, 0x87, 0x02,
	0x0a, 0x05, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0xa0, 0x01, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12,
	0x35, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x33, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x35, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x09, 0x6b, 0x65, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2d, 0x0a, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x35, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x07, 0x0a, 0x05, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x22, 0x9e, 0x02, 0x0a, 0x0e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x35, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x6c, 0x79, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x6a, 0x35, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x6a, 0x35, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6a, 0x35, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_j5_schema_v1_schema_proto_rawDescOnce sync.Once
	file_j5_schema_v1_schema_proto_rawDescData = file_j5_schema_v1_schema_proto_rawDesc
)

func file_j5_schema_v1_schema_proto_rawDescGZIP() []byte {
	file_j5_schema_v1_schema_proto_rawDescOnce.Do(func() {
		file_j5_schema_v1_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_j5_schema_v1_schema_proto_rawDescData)
	})
	return file_j5_schema_v1_schema_proto_rawDescData
}

var file_j5_schema_v1_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_j5_schema_v1_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_j5_schema_v1_schema_proto_goTypes = []any{
	(Float_Format)(0),           // 0: j5.schema.v1.Float.Format
	(Integer_Format)(0),         // 1: j5.schema.v1.Integer.Format
	(*RootSchema)(nil),          // 2: j5.schema.v1.RootSchema
	(*Schema)(nil),              // 3: j5.schema.v1.Schema
	(*Ref)(nil),                 // 4: j5.schema.v1.Ref
	(*Any)(nil),                 // 5: j5.schema.v1.Any
	(*ObjectAsField)(nil),       // 6: j5.schema.v1.ObjectAsField
	(*Object)(nil),              // 7: j5.schema.v1.Object
	(*OneofAsField)(nil),        // 8: j5.schema.v1.OneofAsField
	(*Oneof)(nil),               // 9: j5.schema.v1.Oneof
	(*EnumAsField)(nil),         // 10: j5.schema.v1.EnumAsField
	(*Enum)(nil),                // 11: j5.schema.v1.Enum
	(*String)(nil),              // 12: j5.schema.v1.String
	(*Float)(nil),               // 13: j5.schema.v1.Float
	(*Integer)(nil),             // 14: j5.schema.v1.Integer
	(*Boolean)(nil),             // 15: j5.schema.v1.Boolean
	(*Array)(nil),               // 16: j5.schema.v1.Array
	(*Map)(nil),                 // 17: j5.schema.v1.Map
	(*ObjectProperty)(nil),      // 18: j5.schema.v1.ObjectProperty
	(*ObjectAsField_Rules)(nil), // 19: j5.schema.v1.ObjectAsField.Rules
	(*OneofAsField_Rules)(nil),  // 20: j5.schema.v1.OneofAsField.Rules
	(*EnumAsField_Rules)(nil),   // 21: j5.schema.v1.EnumAsField.Rules
	(*Enum_Value)(nil),          // 22: j5.schema.v1.Enum.Value
	(*String_Rules)(nil),        // 23: j5.schema.v1.String.Rules
	(*Float_Rules)(nil),         // 24: j5.schema.v1.Float.Rules
	(*Integer_Rules)(nil),       // 25: j5.schema.v1.Integer.Rules
	(*Boolean_Rules)(nil),       // 26: j5.schema.v1.Boolean.Rules
	(*Array_Rules)(nil),         // 27: j5.schema.v1.Array.Rules
	(*Map_Rules)(nil),           // 28: j5.schema.v1.Map.Rules
}
var file_j5_schema_v1_schema_proto_depIdxs = []int32{
	9,  // 0: j5.schema.v1.RootSchema.oneof:type_name -> j5.schema.v1.Oneof
	7,  // 1: j5.schema.v1.RootSchema.object:type_name -> j5.schema.v1.Object
	11, // 2: j5.schema.v1.RootSchema.enum:type_name -> j5.schema.v1.Enum
	5,  // 3: j5.schema.v1.Schema.any:type_name -> j5.schema.v1.Any
	8,  // 4: j5.schema.v1.Schema.oneof:type_name -> j5.schema.v1.OneofAsField
	6,  // 5: j5.schema.v1.Schema.object:type_name -> j5.schema.v1.ObjectAsField
	10, // 6: j5.schema.v1.Schema.enum:type_name -> j5.schema.v1.EnumAsField
	16, // 7: j5.schema.v1.Schema.array:type_name -> j5.schema.v1.Array
	17, // 8: j5.schema.v1.Schema.map:type_name -> j5.schema.v1.Map
	12, // 9: j5.schema.v1.Schema.string:type_name -> j5.schema.v1.String
	14, // 10: j5.schema.v1.Schema.integer:type_name -> j5.schema.v1.Integer
	13, // 11: j5.schema.v1.Schema.float:type_name -> j5.schema.v1.Float
	15, // 12: j5.schema.v1.Schema.boolean:type_name -> j5.schema.v1.Boolean
	4,  // 13: j5.schema.v1.ObjectAsField.ref:type_name -> j5.schema.v1.Ref
	7,  // 14: j5.schema.v1.ObjectAsField.object:type_name -> j5.schema.v1.Object
	19, // 15: j5.schema.v1.ObjectAsField.rules:type_name -> j5.schema.v1.ObjectAsField.Rules
	18, // 16: j5.schema.v1.Object.properties:type_name -> j5.schema.v1.ObjectProperty
	4,  // 17: j5.schema.v1.OneofAsField.ref:type_name -> j5.schema.v1.Ref
	9,  // 18: j5.schema.v1.OneofAsField.oneof:type_name -> j5.schema.v1.Oneof
	20, // 19: j5.schema.v1.OneofAsField.rules:type_name -> j5.schema.v1.OneofAsField.Rules
	18, // 20: j5.schema.v1.Oneof.properties:type_name -> j5.schema.v1.ObjectProperty
	4,  // 21: j5.schema.v1.EnumAsField.ref:type_name -> j5.schema.v1.Ref
	11, // 22: j5.schema.v1.EnumAsField.enum:type_name -> j5.schema.v1.Enum
	21, // 23: j5.schema.v1.EnumAsField.rules:type_name -> j5.schema.v1.EnumAsField.Rules
	22, // 24: j5.schema.v1.Enum.options:type_name -> j5.schema.v1.Enum.Value
	23, // 25: j5.schema.v1.String.rules:type_name -> j5.schema.v1.String.Rules
	0,  // 26: j5.schema.v1.Float.format:type_name -> j5.schema.v1.Float.Format
	24, // 27: j5.schema.v1.Float.rules:type_name -> j5.schema.v1.Float.Rules
	1,  // 28: j5.schema.v1.Integer.format:type_name -> j5.schema.v1.Integer.Format
	25, // 29: j5.schema.v1.Integer.rules:type_name -> j5.schema.v1.Integer.Rules
	26, // 30: j5.schema.v1.Boolean.rules:type_name -> j5.schema.v1.Boolean.Rules
	27, // 31: j5.schema.v1.Array.rules:type_name -> j5.schema.v1.Array.Rules
	3,  // 32: j5.schema.v1.Array.items:type_name -> j5.schema.v1.Schema
	3,  // 33: j5.schema.v1.Map.item_schema:type_name -> j5.schema.v1.Schema
	3,  // 34: j5.schema.v1.Map.key_schema:type_name -> j5.schema.v1.Schema
	28, // 35: j5.schema.v1.Map.rules:type_name -> j5.schema.v1.Map.Rules
	3,  // 36: j5.schema.v1.ObjectProperty.schema:type_name -> j5.schema.v1.Schema
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_j5_schema_v1_schema_proto_init() }
func file_j5_schema_v1_schema_proto_init() {
	if File_j5_schema_v1_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_j5_schema_v1_schema_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RootSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Any); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ObjectAsField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*OneofAsField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Oneof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*EnumAsField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Enum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Float); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Integer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Boolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Array); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ObjectProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ObjectAsField_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*OneofAsField_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*EnumAsField_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Enum_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*String_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Float_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Integer_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Boolean_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*Array_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_schema_v1_schema_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*Map_Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_j5_schema_v1_schema_proto_msgTypes[0].OneofWrappers = []any{
		(*RootSchema_Oneof)(nil),
		(*RootSchema_Object)(nil),
		(*RootSchema_Enum)(nil),
	}
	file_j5_schema_v1_schema_proto_msgTypes[1].OneofWrappers = []any{
		(*Schema_Any)(nil),
		(*Schema_Oneof)(nil),
		(*Schema_Object)(nil),
		(*Schema_Enum)(nil),
		(*Schema_Array)(nil),
		(*Schema_Map)(nil),
		(*Schema_String_)(nil),
		(*Schema_Integer)(nil),
		(*Schema_Float)(nil),
		(*Schema_Boolean)(nil),
	}
	file_j5_schema_v1_schema_proto_msgTypes[4].OneofWrappers = []any{
		(*ObjectAsField_Ref)(nil),
		(*ObjectAsField_Object)(nil),
	}
	file_j5_schema_v1_schema_proto_msgTypes[6].OneofWrappers = []any{
		(*OneofAsField_Ref)(nil),
		(*OneofAsField_Oneof)(nil),
	}
	file_j5_schema_v1_schema_proto_msgTypes[8].OneofWrappers = []any{
		(*EnumAsField_Ref)(nil),
		(*EnumAsField_Enum)(nil),
	}
	file_j5_schema_v1_schema_proto_msgTypes[10].OneofWrappers = []any{}
	file_j5_schema_v1_schema_proto_msgTypes[17].OneofWrappers = []any{}
	file_j5_schema_v1_schema_proto_msgTypes[21].OneofWrappers = []any{}
	file_j5_schema_v1_schema_proto_msgTypes[22].OneofWrappers = []any{}
	file_j5_schema_v1_schema_proto_msgTypes[23].OneofWrappers = []any{}
	file_j5_schema_v1_schema_proto_msgTypes[24].OneofWrappers = []any{}
	file_j5_schema_v1_schema_proto_msgTypes[25].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_j5_schema_v1_schema_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_j5_schema_v1_schema_proto_goTypes,
		DependencyIndexes: file_j5_schema_v1_schema_proto_depIdxs,
		EnumInfos:         file_j5_schema_v1_schema_proto_enumTypes,
		MessageInfos:      file_j5_schema_v1_schema_proto_msgTypes,
	}.Build()
	File_j5_schema_v1_schema_proto = out.File
	file_j5_schema_v1_schema_proto_rawDesc = nil
	file_j5_schema_v1_schema_proto_goTypes = nil
	file_j5_schema_v1_schema_proto_depIdxs = nil
}
