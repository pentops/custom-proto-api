// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: test/foo/v1/test.proto

package foo_testpb

import (
	_ "github.com/pentops/j5/gen/j5/ext/v1/ext_j5pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Enum int32

const (
	Enum_ENUM_UNSPECIFIED Enum = 0
	Enum_ENUM_VALUE1      Enum = 1
	Enum_ENUM_VALUE2      Enum = 2
)

// Enum value maps for Enum.
var (
	Enum_name = map[int32]string{
		0: "ENUM_UNSPECIFIED",
		1: "ENUM_VALUE1",
		2: "ENUM_VALUE2",
	}
	Enum_value = map[string]int32{
		"ENUM_UNSPECIFIED": 0,
		"ENUM_VALUE1":      1,
		"ENUM_VALUE2":      2,
	}
)

func (x Enum) Enum() *Enum {
	p := new(Enum)
	*p = x
	return p
}

func (x Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_foo_v1_test_proto_enumTypes[0].Descriptor()
}

func (Enum) Type() protoreflect.EnumType {
	return &file_test_foo_v1_test_proto_enumTypes[0]
}

func (x Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enum.Descriptor instead.
func (Enum) EnumDescriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{0}
}

type Bar_Nenum int32

const (
	Bar_NENUM_UNSPECIFIED Bar_Nenum = 0
	Bar_NENUM_VALUE1      Bar_Nenum = 1
	Bar_NENUM_VALUE2      Bar_Nenum = 2
)

// Enum value maps for Bar_Nenum.
var (
	Bar_Nenum_name = map[int32]string{
		0: "NENUM_UNSPECIFIED",
		1: "NENUM_VALUE1",
		2: "NENUM_VALUE2",
	}
	Bar_Nenum_value = map[string]int32{
		"NENUM_UNSPECIFIED": 0,
		"NENUM_VALUE1":      1,
		"NENUM_VALUE2":      2,
	}
)

func (x Bar_Nenum) Enum() *Bar_Nenum {
	p := new(Bar_Nenum)
	*p = x
	return p
}

func (x Bar_Nenum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bar_Nenum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_foo_v1_test_proto_enumTypes[1].Descriptor()
}

func (Bar_Nenum) Type() protoreflect.EnumType {
	return &file_test_foo_v1_test_proto_enumTypes[1]
}

func (x Bar_Nenum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bar_Nenum.Descriptor instead.
func (Bar_Nenum) EnumDescriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{6, 0}
}

// Leading GetFooRequest Comment
type GetFooRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Number int64  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	// Commant before numbers
	Numbers      []float32     `protobuf:"fixed32,3,rep,packed,name=numbers,proto3" json:"numbers,omitempty"` // Comment on field line
	Ab           *ABMessage    `protobuf:"bytes,4,opt,name=ab,proto3" json:"ab,omitempty"`                    // Comment on ab
	MultipleWord string        `protobuf:"bytes,5,opt,name=multiple_word,json=multipleWord,proto3" json:"multiple_word,omitempty"`
	Query        *QueryRequest `protobuf:"bytes,100,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetFooRequest) Reset() {
	*x = GetFooRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFooRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFooRequest) ProtoMessage() {}

func (x *GetFooRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFooRequest.ProtoReflect.Descriptor instead.
func (*GetFooRequest) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{0}
}

func (x *GetFooRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFooRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *GetFooRequest) GetNumbers() []float32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *GetFooRequest) GetAb() *ABMessage {
	if x != nil {
		return x.Ab
	}
	return nil
}

func (x *GetFooRequest) GetMultipleWord() string {
	if x != nil {
		return x.MultipleWord
	}
	return ""
}

func (x *GetFooRequest) GetQuery() *QueryRequest {
	if x != nil {
		return x.Query
	}
	return nil
}

// Minimal copy from protostate to avoid import
type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*QueryRequest_Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{1}
}

func (x *QueryRequest) GetFilters() []*QueryRequest_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Multi
// Line
// Comment
type ABMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A string `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	B string `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *ABMessage) Reset() {
	*x = ABMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABMessage) ProtoMessage() {}

func (x *ABMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABMessage.ProtoReflect.Descriptor instead.
func (*ABMessage) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{2}
}

func (x *ABMessage) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

func (x *ABMessage) GetB() string {
	if x != nil {
		return x.B
	}
	return ""
}

// GetFooResponse Comment
type GetFooResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Field string `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *GetFooResponse) Reset() {
	*x = GetFooResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFooResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFooResponse) ProtoMessage() {}

func (x *GetFooResponse) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFooResponse.ProtoReflect.Descriptor instead.
func (*GetFooResponse) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{3}
}

func (x *GetFooResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFooResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetFooResponse) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

type PostFooRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SString         string                   `protobuf:"bytes,1,opt,name=s_string,json=sString,proto3" json:"s_string,omitempty"`
	OString         *string                  `protobuf:"bytes,2,opt,name=o_string,json=oString,proto3,oneof" json:"o_string,omitempty"`
	RString         []string                 `protobuf:"bytes,3,rep,name=r_string,json=rString,proto3" json:"r_string,omitempty"`
	SFloat          float32                  `protobuf:"fixed32,4,opt,name=s_float,json=sFloat,proto3" json:"s_float,omitempty"`
	OFloat          *float32                 `protobuf:"fixed32,5,opt,name=o_float,json=oFloat,proto3,oneof" json:"o_float,omitempty"`
	RFloat          []float32                `protobuf:"fixed32,6,rep,packed,name=r_float,json=rFloat,proto3" json:"r_float,omitempty"`
	Ts              *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=ts,proto3" json:"ts,omitempty"`
	RTs             []*timestamppb.Timestamp `protobuf:"bytes,8,rep,name=r_ts,json=rTs,proto3" json:"r_ts,omitempty"`
	SBar            *Bar                     `protobuf:"bytes,9,opt,name=s_bar,json=sBar,proto3" json:"s_bar,omitempty"`
	RBars           []*Bar                   `protobuf:"bytes,10,rep,name=r_bars,json=rBars,proto3" json:"r_bars,omitempty"`
	Enum            Enum                     `protobuf:"varint,11,opt,name=enum,proto3,enum=test.v1.Enum" json:"enum,omitempty"`
	REnum           []Enum                   `protobuf:"varint,12,rep,packed,name=r_enum,json=rEnum,proto3,enum=test.v1.Enum" json:"r_enum,omitempty"`
	SBytes          []byte                   `protobuf:"bytes,13,opt,name=s_bytes,json=sBytes,proto3" json:"s_bytes,omitempty"`
	RBytes          [][]byte                 `protobuf:"bytes,14,rep,name=r_bytes,json=rBytes,proto3" json:"r_bytes,omitempty"`
	MapStringString map[string]string        `protobuf:"bytes,15,rep,name=map_string_string,json=mapStringString,proto3" json:"map_string_string,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to AnonOneof:
	//
	//	*PostFooRequest_OneofString
	//	*PostFooRequest_OneBar
	//	*PostFooRequest_OneofFloat
	//	*PostFooRequest_OneofEnum
	AnonOneof isPostFooRequest_AnonOneof `protobuf_oneof:"anon_oneof"`
	// Types that are assignable to ExposedOneof:
	//
	//	*PostFooRequest_ExposedString
	ExposedOneof isPostFooRequest_ExposedOneof `protobuf_oneof:"exposed_oneof"`
	WrappedOneof *WrappedOneof                 `protobuf:"bytes,16,opt,name=wrapped_oneof,json=wrappedOneof,proto3" json:"wrapped_oneof,omitempty"`
	Flattened    *FlattenedMessage             `protobuf:"bytes,17,opt,name=flattened,proto3" json:"flattened,omitempty"`
}

func (x *PostFooRequest) Reset() {
	*x = PostFooRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFooRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFooRequest) ProtoMessage() {}

func (x *PostFooRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFooRequest.ProtoReflect.Descriptor instead.
func (*PostFooRequest) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{4}
}

func (x *PostFooRequest) GetSString() string {
	if x != nil {
		return x.SString
	}
	return ""
}

func (x *PostFooRequest) GetOString() string {
	if x != nil && x.OString != nil {
		return *x.OString
	}
	return ""
}

func (x *PostFooRequest) GetRString() []string {
	if x != nil {
		return x.RString
	}
	return nil
}

func (x *PostFooRequest) GetSFloat() float32 {
	if x != nil {
		return x.SFloat
	}
	return 0
}

func (x *PostFooRequest) GetOFloat() float32 {
	if x != nil && x.OFloat != nil {
		return *x.OFloat
	}
	return 0
}

func (x *PostFooRequest) GetRFloat() []float32 {
	if x != nil {
		return x.RFloat
	}
	return nil
}

func (x *PostFooRequest) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *PostFooRequest) GetRTs() []*timestamppb.Timestamp {
	if x != nil {
		return x.RTs
	}
	return nil
}

func (x *PostFooRequest) GetSBar() *Bar {
	if x != nil {
		return x.SBar
	}
	return nil
}

func (x *PostFooRequest) GetRBars() []*Bar {
	if x != nil {
		return x.RBars
	}
	return nil
}

func (x *PostFooRequest) GetEnum() Enum {
	if x != nil {
		return x.Enum
	}
	return Enum_ENUM_UNSPECIFIED
}

func (x *PostFooRequest) GetREnum() []Enum {
	if x != nil {
		return x.REnum
	}
	return nil
}

func (x *PostFooRequest) GetSBytes() []byte {
	if x != nil {
		return x.SBytes
	}
	return nil
}

func (x *PostFooRequest) GetRBytes() [][]byte {
	if x != nil {
		return x.RBytes
	}
	return nil
}

func (x *PostFooRequest) GetMapStringString() map[string]string {
	if x != nil {
		return x.MapStringString
	}
	return nil
}

func (m *PostFooRequest) GetAnonOneof() isPostFooRequest_AnonOneof {
	if m != nil {
		return m.AnonOneof
	}
	return nil
}

func (x *PostFooRequest) GetOneofString() string {
	if x, ok := x.GetAnonOneof().(*PostFooRequest_OneofString); ok {
		return x.OneofString
	}
	return ""
}

func (x *PostFooRequest) GetOneBar() *Bar {
	if x, ok := x.GetAnonOneof().(*PostFooRequest_OneBar); ok {
		return x.OneBar
	}
	return nil
}

func (x *PostFooRequest) GetOneofFloat() float32 {
	if x, ok := x.GetAnonOneof().(*PostFooRequest_OneofFloat); ok {
		return x.OneofFloat
	}
	return 0
}

func (x *PostFooRequest) GetOneofEnum() Enum {
	if x, ok := x.GetAnonOneof().(*PostFooRequest_OneofEnum); ok {
		return x.OneofEnum
	}
	return Enum_ENUM_UNSPECIFIED
}

func (m *PostFooRequest) GetExposedOneof() isPostFooRequest_ExposedOneof {
	if m != nil {
		return m.ExposedOneof
	}
	return nil
}

func (x *PostFooRequest) GetExposedString() string {
	if x, ok := x.GetExposedOneof().(*PostFooRequest_ExposedString); ok {
		return x.ExposedString
	}
	return ""
}

func (x *PostFooRequest) GetWrappedOneof() *WrappedOneof {
	if x != nil {
		return x.WrappedOneof
	}
	return nil
}

func (x *PostFooRequest) GetFlattened() *FlattenedMessage {
	if x != nil {
		return x.Flattened
	}
	return nil
}

type isPostFooRequest_AnonOneof interface {
	isPostFooRequest_AnonOneof()
}

type PostFooRequest_OneofString struct {
	OneofString string `protobuf:"bytes,100,opt,name=oneof_string,json=oneofString,proto3,oneof"`
}

type PostFooRequest_OneBar struct {
	OneBar *Bar `protobuf:"bytes,101,opt,name=one_bar,json=oneBar,proto3,oneof"`
}

type PostFooRequest_OneofFloat struct {
	OneofFloat float32 `protobuf:"fixed32,102,opt,name=oneof_float,json=oneofFloat,proto3,oneof"`
}

type PostFooRequest_OneofEnum struct {
	OneofEnum Enum `protobuf:"varint,103,opt,name=oneof_enum,json=oneofEnum,proto3,enum=test.v1.Enum,oneof"`
}

func (*PostFooRequest_OneofString) isPostFooRequest_AnonOneof() {}

func (*PostFooRequest_OneBar) isPostFooRequest_AnonOneof() {}

func (*PostFooRequest_OneofFloat) isPostFooRequest_AnonOneof() {}

func (*PostFooRequest_OneofEnum) isPostFooRequest_AnonOneof() {}

type isPostFooRequest_ExposedOneof interface {
	isPostFooRequest_ExposedOneof()
}

type PostFooRequest_ExposedString struct {
	ExposedString string `protobuf:"bytes,200,opt,name=exposed_string,json=exposedString,proto3,oneof"`
}

func (*PostFooRequest_ExposedString) isPostFooRequest_ExposedOneof() {}

type WrappedOneof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*WrappedOneof_OneofString
	//	*WrappedOneof_OneBar
	//	*WrappedOneof_OneofFloat
	//	*WrappedOneof_OneofEnum
	Type isWrappedOneof_Type `protobuf_oneof:"type"`
}

func (x *WrappedOneof) Reset() {
	*x = WrappedOneof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrappedOneof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrappedOneof) ProtoMessage() {}

func (x *WrappedOneof) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrappedOneof.ProtoReflect.Descriptor instead.
func (*WrappedOneof) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{5}
}

func (m *WrappedOneof) GetType() isWrappedOneof_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *WrappedOneof) GetOneofString() string {
	if x, ok := x.GetType().(*WrappedOneof_OneofString); ok {
		return x.OneofString
	}
	return ""
}

func (x *WrappedOneof) GetOneBar() *Bar {
	if x, ok := x.GetType().(*WrappedOneof_OneBar); ok {
		return x.OneBar
	}
	return nil
}

func (x *WrappedOneof) GetOneofFloat() float32 {
	if x, ok := x.GetType().(*WrappedOneof_OneofFloat); ok {
		return x.OneofFloat
	}
	return 0
}

func (x *WrappedOneof) GetOneofEnum() Enum {
	if x, ok := x.GetType().(*WrappedOneof_OneofEnum); ok {
		return x.OneofEnum
	}
	return Enum_ENUM_UNSPECIFIED
}

type isWrappedOneof_Type interface {
	isWrappedOneof_Type()
}

type WrappedOneof_OneofString struct {
	OneofString string `protobuf:"bytes,100,opt,name=oneof_string,json=oneofString,proto3,oneof"`
}

type WrappedOneof_OneBar struct {
	OneBar *Bar `protobuf:"bytes,101,opt,name=one_bar,json=oneBar,proto3,oneof"`
}

type WrappedOneof_OneofFloat struct {
	OneofFloat float32 `protobuf:"fixed32,102,opt,name=oneof_float,json=oneofFloat,proto3,oneof"`
}

type WrappedOneof_OneofEnum struct {
	OneofEnum Enum `protobuf:"varint,103,opt,name=oneof_enum,json=oneofEnum,proto3,enum=test.v1.Enum,oneof"`
}

func (*WrappedOneof_OneofString) isWrappedOneof_Type() {}

func (*WrappedOneof_OneBar) isWrappedOneof_Type() {}

func (*WrappedOneof_OneofFloat) isWrappedOneof_Type() {}

func (*WrappedOneof_OneofEnum) isWrappedOneof_Type() {}

type Bar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Field string           `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	Nest1 *Bar_Nest1       `protobuf:"bytes,4,opt,name=nest1,proto3" json:"nest1,omitempty"`
	Nest2 *Bar_Nest1_Nest2 `protobuf:"bytes,5,opt,name=nest2,proto3" json:"nest2,omitempty"`
	Nenum Bar_Nenum        `protobuf:"varint,6,opt,name=nenum,proto3,enum=test.v1.Bar_Nenum" json:"nenum,omitempty"`
}

func (x *Bar) Reset() {
	*x = Bar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bar) ProtoMessage() {}

func (x *Bar) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bar.ProtoReflect.Descriptor instead.
func (*Bar) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{6}
}

func (x *Bar) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Bar) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bar) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Bar) GetNest1() *Bar_Nest1 {
	if x != nil {
		return x.Nest1
	}
	return nil
}

func (x *Bar) GetNest2() *Bar_Nest1_Nest2 {
	if x != nil {
		return x.Nest2
	}
	return nil
}

func (x *Bar) GetNenum() Bar_Nenum {
	if x != nil {
		return x.Nenum
	}
	return Bar_NENUM_UNSPECIFIED
}

type PostFooResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Field string `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *PostFooResponse) Reset() {
	*x = PostFooResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFooResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFooResponse) ProtoMessage() {}

func (x *PostFooResponse) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFooResponse.ProtoReflect.Descriptor instead.
func (*PostFooResponse) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{7}
}

func (x *PostFooResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostFooResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostFooResponse) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

type FooMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Field string           `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	Nest2 *Bar_Nest1_Nest2 `protobuf:"bytes,4,opt,name=nest2,proto3" json:"nest2,omitempty"`
}

func (x *FooMessage) Reset() {
	*x = FooMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooMessage) ProtoMessage() {}

func (x *FooMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooMessage.ProtoReflect.Descriptor instead.
func (*FooMessage) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{8}
}

func (x *FooMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FooMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FooMessage) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FooMessage) GetNest2() *Bar_Nest1_Nest2 {
	if x != nil {
		return x.Nest2
	}
	return nil
}

type FlattenedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldFromFlattened   string `protobuf:"bytes,1,opt,name=field_from_flattened,json=fieldFromFlattened,proto3" json:"field_from_flattened,omitempty"`
	Field_2FromFlattened string `protobuf:"bytes,2,opt,name=field_2_from_flattened,json=field2FromFlattened,proto3" json:"field_2_from_flattened,omitempty"`
}

func (x *FlattenedMessage) Reset() {
	*x = FlattenedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlattenedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlattenedMessage) ProtoMessage() {}

func (x *FlattenedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlattenedMessage.ProtoReflect.Descriptor instead.
func (*FlattenedMessage) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{9}
}

func (x *FlattenedMessage) GetFieldFromFlattened() string {
	if x != nil {
		return x.FieldFromFlattened
	}
	return ""
}

func (x *FlattenedMessage) GetField_2FromFlattened() string {
	if x != nil {
		return x.Field_2FromFlattened
	}
	return ""
}

type QueryRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*QueryRequest_Filter_Field
	//	*QueryRequest_Filter_And
	//	*QueryRequest_Filter_Or
	Type isQueryRequest_Filter_Type `protobuf_oneof:"type"`
}

func (x *QueryRequest_Filter) Reset() {
	*x = QueryRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest_Filter) ProtoMessage() {}

func (x *QueryRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest_Filter.ProtoReflect.Descriptor instead.
func (*QueryRequest_Filter) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{1, 0}
}

func (m *QueryRequest_Filter) GetType() isQueryRequest_Filter_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *QueryRequest_Filter) GetField() *QueryRequest_Field {
	if x, ok := x.GetType().(*QueryRequest_Filter_Field); ok {
		return x.Field
	}
	return nil
}

func (x *QueryRequest_Filter) GetAnd() *QueryRequest_And {
	if x, ok := x.GetType().(*QueryRequest_Filter_And); ok {
		return x.And
	}
	return nil
}

func (x *QueryRequest_Filter) GetOr() *QueryRequest_Or {
	if x, ok := x.GetType().(*QueryRequest_Filter_Or); ok {
		return x.Or
	}
	return nil
}

type isQueryRequest_Filter_Type interface {
	isQueryRequest_Filter_Type()
}

type QueryRequest_Filter_Field struct {
	// option (j5.ext.v1.message).is_oneof_wrapper = true;
	Field *QueryRequest_Field `protobuf:"bytes,1,opt,name=field,proto3,oneof"`
}

type QueryRequest_Filter_And struct {
	And *QueryRequest_And `protobuf:"bytes,2,opt,name=and,proto3,oneof"`
}

type QueryRequest_Filter_Or struct {
	Or *QueryRequest_Or `protobuf:"bytes,3,opt,name=or,proto3,oneof"`
}

func (*QueryRequest_Filter_Field) isQueryRequest_Filter_Type() {}

func (*QueryRequest_Filter_And) isQueryRequest_Filter_Type() {}

func (*QueryRequest_Filter_Or) isQueryRequest_Filter_Type() {}

type QueryRequest_And struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*QueryRequest_Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *QueryRequest_And) Reset() {
	*x = QueryRequest_And{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest_And) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest_And) ProtoMessage() {}

func (x *QueryRequest_And) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest_And.ProtoReflect.Descriptor instead.
func (*QueryRequest_And) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{1, 1}
}

func (x *QueryRequest_And) GetFilters() []*QueryRequest_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type QueryRequest_Or struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*QueryRequest_Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *QueryRequest_Or) Reset() {
	*x = QueryRequest_Or{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest_Or) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest_Or) ProtoMessage() {}

func (x *QueryRequest_Or) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest_Or.ProtoReflect.Descriptor instead.
func (*QueryRequest_Or) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{1, 2}
}

func (x *QueryRequest_Or) GetFilters() []*QueryRequest_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type QueryRequest_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Type:
	//
	//	*QueryRequest_Field_Value
	Type isQueryRequest_Field_Type `protobuf_oneof:"type"`
}

func (x *QueryRequest_Field) Reset() {
	*x = QueryRequest_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest_Field) ProtoMessage() {}

func (x *QueryRequest_Field) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest_Field.ProtoReflect.Descriptor instead.
func (*QueryRequest_Field) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{1, 3}
}

func (x *QueryRequest_Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *QueryRequest_Field) GetType() isQueryRequest_Field_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *QueryRequest_Field) GetValue() string {
	if x, ok := x.GetType().(*QueryRequest_Field_Value); ok {
		return x.Value
	}
	return ""
}

type isQueryRequest_Field_Type interface {
	isQueryRequest_Field_Type()
}

type QueryRequest_Field_Value struct {
	Value string `protobuf:"bytes,2,opt,name=value,proto3,oneof"`
}

func (*QueryRequest_Field_Value) isQueryRequest_Field_Type() {}

type Bar_Nest1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nest1Id string `protobuf:"bytes,1,opt,name=nest1_id,json=nest1Id,proto3" json:"nest1_id,omitempty"`
}

func (x *Bar_Nest1) Reset() {
	*x = Bar_Nest1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bar_Nest1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bar_Nest1) ProtoMessage() {}

func (x *Bar_Nest1) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bar_Nest1.ProtoReflect.Descriptor instead.
func (*Bar_Nest1) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Bar_Nest1) GetNest1Id() string {
	if x != nil {
		return x.Nest1Id
	}
	return ""
}

type Bar_Nest1_Nest2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nest2Id   string    `protobuf:"bytes,1,opt,name=nest2_id,json=nest2Id,proto3" json:"nest2_id,omitempty"`
	Nest2Enum Bar_Nenum `protobuf:"varint,2,opt,name=nest2_enum,json=nest2Enum,proto3,enum=test.v1.Bar_Nenum" json:"nest2_enum,omitempty"`
}

func (x *Bar_Nest1_Nest2) Reset() {
	*x = Bar_Nest1_Nest2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_foo_v1_test_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bar_Nest1_Nest2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bar_Nest1_Nest2) ProtoMessage() {}

func (x *Bar_Nest1_Nest2) ProtoReflect() protoreflect.Message {
	mi := &file_test_foo_v1_test_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bar_Nest1_Nest2.ProtoReflect.Descriptor instead.
func (*Bar_Nest1_Nest2) Descriptor() ([]byte, []int) {
	return file_test_foo_v1_test_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *Bar_Nest1_Nest2) GetNest2Id() string {
	if x != nil {
		return x.Nest2Id
	}
	return ""
}

func (x *Bar_Nest1_Nest2) GetNest2Enum() Bar_Nenum {
	if x != nil {
		return x.Nest2Enum
	}
	return Bar_NENUM_UNSPECIFIED
}

var File_test_foo_v1_test_proto protoreflect.FileDescriptor

var file_test_foo_v1_test_proto_rawDesc = []byte{
	0x0a, 0x16, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x66, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6a,
	0x35, 0x2f, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x22,
	0x0a, 0x02, 0x61, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x42, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02,
	0x61, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0xb7, 0x03, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xaa, 0x01,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x2d, 0x0a,
	0x03, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x02,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4f, 0x72, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x72, 0x42, 0x10, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x08, 0xda, 0xe5, 0x81, 0xd9, 0x02, 0x02, 0x08, 0x01, 0x1a, 0x3d, 0x0a, 0x03, 0x41, 0x6e,
	0x64, 0x12, 0x36, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x3c, 0x0a, 0x02, 0x4f, 0x72, 0x12,
	0x36, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x45, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x10, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x08, 0xda, 0xe5, 0x81, 0xd9, 0x02, 0x02, 0x08, 0x01, 0x22, 0x27,
	0x0a, 0x09, 0x41, 0x42, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x62, 0x22, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x22, 0x80, 0x08, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x73,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x6f, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x03, 0x52, 0x06, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x02,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x5f, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x03, 0x72, 0x54, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x5f, 0x62, 0x61, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x72, 0x52, 0x04, 0x73, 0x42, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x06, 0x72, 0x5f,
	0x62, 0x61, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x05, 0x72, 0x42, 0x61, 0x72, 0x73, 0x12,
	0x21, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x65, 0x6e,
	0x75, 0x6d, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x05, 0x72, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x06, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x11, 0x6d, 0x61,
	0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0f, 0x6d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x07, 0x6f, 0x6e, 0x65,
	0x5f, 0x62, 0x61, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x6e, 0x65, 0x42,
	0x61, 0x72, 0x12, 0x21, 0x0a, 0x0b, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x65,
	0x6e, 0x75, 0x6d, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x3a, 0x0a, 0x0d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52, 0x0c, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x43, 0x0a, 0x09, 0x66,
	0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0a, 0xea, 0xe5, 0x81, 0xd9, 0x02,
	0x04, 0x12, 0x02, 0x08, 0x01, 0x52, 0x09, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x65, 0x64,
	0x1a, 0x42, 0x0a, 0x14, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x61, 0x6e, 0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x65,
	0x6f, 0x66, 0x42, 0x19, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x12, 0x08, 0xda, 0xe5, 0x81, 0xd9, 0x02, 0x02, 0x08, 0x01, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f,
	0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x0c, 0x57, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x23, 0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x07,
	0x6f, 0x6e, 0x65, 0x5f, 0x62, 0x61, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x48, 0x00, 0x52, 0x06, 0x6f,
	0x6e, 0x65, 0x42, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0b, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x45, 0x6e, 0x75, 0x6d, 0x3a, 0x08, 0xca, 0xe5, 0x81, 0xd9, 0x02, 0x02,
	0x08, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x82, 0x03, 0x0a, 0x03, 0x42,
	0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x28, 0x0a, 0x05,
	0x6e, 0x65, 0x73, 0x74, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x31, 0x52,
	0x05, 0x6e, 0x65, 0x73, 0x74, 0x31, 0x12, 0x2e, 0x0a, 0x05, 0x6e, 0x65, 0x73, 0x74, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x72, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x32, 0x52,
	0x05, 0x6e, 0x65, 0x73, 0x74, 0x32, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65, 0x6e, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x72, 0x2e, 0x4e, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x6e, 0x65, 0x6e, 0x75, 0x6d,
	0x1a, 0x79, 0x0a, 0x05, 0x4e, 0x65, 0x73, 0x74, 0x31, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x73,
	0x74, 0x31, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x73,
	0x74, 0x31, 0x49, 0x64, 0x1a, 0x55, 0x0a, 0x05, 0x4e, 0x65, 0x73, 0x74, 0x32, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x65, 0x73, 0x74, 0x32, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x73, 0x74, 0x32, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x6e, 0x65, 0x73, 0x74,
	0x32, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x2e, 0x4e, 0x65, 0x6e, 0x75, 0x6d,
	0x52, 0x09, 0x6e, 0x65, 0x73, 0x74, 0x32, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x42, 0x0a, 0x05, 0x4e,
	0x65, 0x6e, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4e,
	0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x31, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x4e, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x32, 0x10, 0x02, 0x22,
	0x4b, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x76, 0x0a, 0x0a,
	0x46, 0x6f, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x6e, 0x65, 0x73, 0x74, 0x32, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x72, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x32, 0x52, 0x05, 0x6e,
	0x65, 0x73, 0x74, 0x32, 0x22, 0x79, 0x0a, 0x10, 0x46, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x46, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x32, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x66, 0x6c, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x32, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x2a,
	0x3e, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x55, 0x4d, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x31, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x32, 0x10, 0x02, 0x32,
	0xb9, 0x01, 0x0a, 0x0a, 0x46, 0x6f, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x12, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x12, 0x11, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6f, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x55, 0x0a, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x6f, 0x12,
	0x17, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x6f,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6f, 0x32, 0x40, 0x0a, 0x08, 0x46,
	0x6f, 0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x34, 0x0a, 0x03, 0x46, 0x6f, 0x6f, 0x12, 0x13,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x32, 0x5a,
	0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x74,
	0x6f, 0x70, 0x73, 0x2f, 0x6a, 0x35, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f,
	0x66, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6f, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_foo_v1_test_proto_rawDescOnce sync.Once
	file_test_foo_v1_test_proto_rawDescData = file_test_foo_v1_test_proto_rawDesc
)

func file_test_foo_v1_test_proto_rawDescGZIP() []byte {
	file_test_foo_v1_test_proto_rawDescOnce.Do(func() {
		file_test_foo_v1_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_foo_v1_test_proto_rawDescData)
	})
	return file_test_foo_v1_test_proto_rawDescData
}

var file_test_foo_v1_test_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_test_foo_v1_test_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_test_foo_v1_test_proto_goTypes = []any{
	(Enum)(0),                     // 0: test.v1.Enum
	(Bar_Nenum)(0),                // 1: test.v1.Bar.Nenum
	(*GetFooRequest)(nil),         // 2: test.v1.GetFooRequest
	(*QueryRequest)(nil),          // 3: test.v1.QueryRequest
	(*ABMessage)(nil),             // 4: test.v1.ABMessage
	(*GetFooResponse)(nil),        // 5: test.v1.GetFooResponse
	(*PostFooRequest)(nil),        // 6: test.v1.PostFooRequest
	(*WrappedOneof)(nil),          // 7: test.v1.WrappedOneof
	(*Bar)(nil),                   // 8: test.v1.Bar
	(*PostFooResponse)(nil),       // 9: test.v1.PostFooResponse
	(*FooMessage)(nil),            // 10: test.v1.FooMessage
	(*FlattenedMessage)(nil),      // 11: test.v1.FlattenedMessage
	(*QueryRequest_Filter)(nil),   // 12: test.v1.QueryRequest.Filter
	(*QueryRequest_And)(nil),      // 13: test.v1.QueryRequest.And
	(*QueryRequest_Or)(nil),       // 14: test.v1.QueryRequest.Or
	(*QueryRequest_Field)(nil),    // 15: test.v1.QueryRequest.Field
	nil,                           // 16: test.v1.PostFooRequest.MapStringStringEntry
	(*Bar_Nest1)(nil),             // 17: test.v1.Bar.Nest1
	(*Bar_Nest1_Nest2)(nil),       // 18: test.v1.Bar.Nest1.Nest2
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 20: google.protobuf.Empty
}
var file_test_foo_v1_test_proto_depIdxs = []int32{
	4,  // 0: test.v1.GetFooRequest.ab:type_name -> test.v1.ABMessage
	3,  // 1: test.v1.GetFooRequest.query:type_name -> test.v1.QueryRequest
	12, // 2: test.v1.QueryRequest.filters:type_name -> test.v1.QueryRequest.Filter
	19, // 3: test.v1.PostFooRequest.ts:type_name -> google.protobuf.Timestamp
	19, // 4: test.v1.PostFooRequest.r_ts:type_name -> google.protobuf.Timestamp
	8,  // 5: test.v1.PostFooRequest.s_bar:type_name -> test.v1.Bar
	8,  // 6: test.v1.PostFooRequest.r_bars:type_name -> test.v1.Bar
	0,  // 7: test.v1.PostFooRequest.enum:type_name -> test.v1.Enum
	0,  // 8: test.v1.PostFooRequest.r_enum:type_name -> test.v1.Enum
	16, // 9: test.v1.PostFooRequest.map_string_string:type_name -> test.v1.PostFooRequest.MapStringStringEntry
	8,  // 10: test.v1.PostFooRequest.one_bar:type_name -> test.v1.Bar
	0,  // 11: test.v1.PostFooRequest.oneof_enum:type_name -> test.v1.Enum
	7,  // 12: test.v1.PostFooRequest.wrapped_oneof:type_name -> test.v1.WrappedOneof
	11, // 13: test.v1.PostFooRequest.flattened:type_name -> test.v1.FlattenedMessage
	8,  // 14: test.v1.WrappedOneof.one_bar:type_name -> test.v1.Bar
	0,  // 15: test.v1.WrappedOneof.oneof_enum:type_name -> test.v1.Enum
	17, // 16: test.v1.Bar.nest1:type_name -> test.v1.Bar.Nest1
	18, // 17: test.v1.Bar.nest2:type_name -> test.v1.Bar.Nest1.Nest2
	1,  // 18: test.v1.Bar.nenum:type_name -> test.v1.Bar.Nenum
	18, // 19: test.v1.FooMessage.nest2:type_name -> test.v1.Bar.Nest1.Nest2
	15, // 20: test.v1.QueryRequest.Filter.field:type_name -> test.v1.QueryRequest.Field
	13, // 21: test.v1.QueryRequest.Filter.and:type_name -> test.v1.QueryRequest.And
	14, // 22: test.v1.QueryRequest.Filter.or:type_name -> test.v1.QueryRequest.Or
	12, // 23: test.v1.QueryRequest.And.filters:type_name -> test.v1.QueryRequest.Filter
	12, // 24: test.v1.QueryRequest.Or.filters:type_name -> test.v1.QueryRequest.Filter
	1,  // 25: test.v1.Bar.Nest1.Nest2.nest2_enum:type_name -> test.v1.Bar.Nenum
	2,  // 26: test.v1.FooService.GetFoo:input_type -> test.v1.GetFooRequest
	6,  // 27: test.v1.FooService.PostFoo:input_type -> test.v1.PostFooRequest
	10, // 28: test.v1.FooTopic.Foo:input_type -> test.v1.FooMessage
	5,  // 29: test.v1.FooService.GetFoo:output_type -> test.v1.GetFooResponse
	9,  // 30: test.v1.FooService.PostFoo:output_type -> test.v1.PostFooResponse
	20, // 31: test.v1.FooTopic.Foo:output_type -> google.protobuf.Empty
	29, // [29:32] is the sub-list for method output_type
	26, // [26:29] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_test_foo_v1_test_proto_init() }
func file_test_foo_v1_test_proto_init() {
	if File_test_foo_v1_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_foo_v1_test_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetFooRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ABMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetFooResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PostFooRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*WrappedOneof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Bar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PostFooResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FooMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FlattenedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRequest_And); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRequest_Or); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRequest_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Bar_Nest1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_foo_v1_test_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Bar_Nest1_Nest2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_test_foo_v1_test_proto_msgTypes[4].OneofWrappers = []any{
		(*PostFooRequest_OneofString)(nil),
		(*PostFooRequest_OneBar)(nil),
		(*PostFooRequest_OneofFloat)(nil),
		(*PostFooRequest_OneofEnum)(nil),
		(*PostFooRequest_ExposedString)(nil),
	}
	file_test_foo_v1_test_proto_msgTypes[5].OneofWrappers = []any{
		(*WrappedOneof_OneofString)(nil),
		(*WrappedOneof_OneBar)(nil),
		(*WrappedOneof_OneofFloat)(nil),
		(*WrappedOneof_OneofEnum)(nil),
	}
	file_test_foo_v1_test_proto_msgTypes[10].OneofWrappers = []any{
		(*QueryRequest_Filter_Field)(nil),
		(*QueryRequest_Filter_And)(nil),
		(*QueryRequest_Filter_Or)(nil),
	}
	file_test_foo_v1_test_proto_msgTypes[13].OneofWrappers = []any{
		(*QueryRequest_Field_Value)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_foo_v1_test_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_test_foo_v1_test_proto_goTypes,
		DependencyIndexes: file_test_foo_v1_test_proto_depIdxs,
		EnumInfos:         file_test_foo_v1_test_proto_enumTypes,
		MessageInfos:      file_test_foo_v1_test_proto_msgTypes,
	}.Build()
	File_test_foo_v1_test_proto = out.File
	file_test_foo_v1_test_proto_rawDesc = nil
	file_test_foo_v1_test_proto_goTypes = nil
	file_test_foo_v1_test_proto_depIdxs = nil
}
