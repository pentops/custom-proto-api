// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: jsonapi/v1/schema.proto

package jsonapi_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are assignable to Type:
	//
	//	*Schema_Ref
	//	*Schema_Empty
	//	*Schema_OneofWrapper
	//	*Schema_ArrayItem
	//	*Schema_ObjectItem
	//	*Schema_MapItem
	//	*Schema_StringItem
	//	*Schema_IntegerItem
	//	*Schema_EnumItem
	//	*Schema_NumberItem
	//	*Schema_BooleanItem
	Type isSchema_Type `protobuf_oneof:"type"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{0}
}

func (x *Schema) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (m *Schema) GetType() isSchema_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Schema) GetRef() string {
	if x, ok := x.GetType().(*Schema_Ref); ok {
		return x.Ref
	}
	return ""
}

func (x *Schema) GetEmpty() *EmptySchemmaItem {
	if x, ok := x.GetType().(*Schema_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *Schema) GetOneofWrapper() *OneofWrapperItem {
	if x, ok := x.GetType().(*Schema_OneofWrapper); ok {
		return x.OneofWrapper
	}
	return nil
}

func (x *Schema) GetArrayItem() *ArrayItem {
	if x, ok := x.GetType().(*Schema_ArrayItem); ok {
		return x.ArrayItem
	}
	return nil
}

func (x *Schema) GetObjectItem() *ObjectItem {
	if x, ok := x.GetType().(*Schema_ObjectItem); ok {
		return x.ObjectItem
	}
	return nil
}

func (x *Schema) GetMapItem() *MapItem {
	if x, ok := x.GetType().(*Schema_MapItem); ok {
		return x.MapItem
	}
	return nil
}

func (x *Schema) GetStringItem() *StringItem {
	if x, ok := x.GetType().(*Schema_StringItem); ok {
		return x.StringItem
	}
	return nil
}

func (x *Schema) GetIntegerItem() *IntegerItem {
	if x, ok := x.GetType().(*Schema_IntegerItem); ok {
		return x.IntegerItem
	}
	return nil
}

func (x *Schema) GetEnumItem() *EnumItem {
	if x, ok := x.GetType().(*Schema_EnumItem); ok {
		return x.EnumItem
	}
	return nil
}

func (x *Schema) GetNumberItem() *NumberItem {
	if x, ok := x.GetType().(*Schema_NumberItem); ok {
		return x.NumberItem
	}
	return nil
}

func (x *Schema) GetBooleanItem() *BooleanItem {
	if x, ok := x.GetType().(*Schema_BooleanItem); ok {
		return x.BooleanItem
	}
	return nil
}

type isSchema_Type interface {
	isSchema_Type()
}

type Schema_Ref struct {
	// Special Cases
	Ref string `protobuf:"bytes,10,opt,name=ref,proto3,oneof"`
}

type Schema_Empty struct {
	Empty *EmptySchemmaItem `protobuf:"bytes,11,opt,name=empty,proto3,oneof"`
}

type Schema_OneofWrapper struct {
	OneofWrapper *OneofWrapperItem `protobuf:"bytes,12,opt,name=oneof_wrapper,json=oneofWrapper,proto3,oneof"`
}

type Schema_ArrayItem struct {
	// Complex Types
	ArrayItem *ArrayItem `protobuf:"bytes,20,opt,name=array_item,json=arrayItem,proto3,oneof"`
}

type Schema_ObjectItem struct {
	ObjectItem *ObjectItem `protobuf:"bytes,21,opt,name=object_item,json=objectItem,proto3,oneof"`
}

type Schema_MapItem struct {
	MapItem *MapItem `protobuf:"bytes,22,opt,name=map_item,json=mapItem,proto3,oneof"`
}

type Schema_StringItem struct {
	// Scalar Types
	StringItem *StringItem `protobuf:"bytes,30,opt,name=string_item,json=stringItem,proto3,oneof"`
}

type Schema_IntegerItem struct {
	IntegerItem *IntegerItem `protobuf:"bytes,31,opt,name=integer_item,json=integerItem,proto3,oneof"`
}

type Schema_EnumItem struct {
	EnumItem *EnumItem `protobuf:"bytes,32,opt,name=enum_item,json=enumItem,proto3,oneof"`
}

type Schema_NumberItem struct {
	NumberItem *NumberItem `protobuf:"bytes,33,opt,name=number_item,json=numberItem,proto3,oneof"`
}

type Schema_BooleanItem struct {
	BooleanItem *BooleanItem `protobuf:"bytes,34,opt,name=boolean_item,json=booleanItem,proto3,oneof"`
}

func (*Schema_Ref) isSchema_Type() {}

func (*Schema_Empty) isSchema_Type() {}

func (*Schema_OneofWrapper) isSchema_Type() {}

func (*Schema_ArrayItem) isSchema_Type() {}

func (*Schema_ObjectItem) isSchema_Type() {}

func (*Schema_MapItem) isSchema_Type() {}

func (*Schema_StringItem) isSchema_Type() {}

func (*Schema_IntegerItem) isSchema_Type() {}

func (*Schema_EnumItem) isSchema_Type() {}

func (*Schema_NumberItem) isSchema_Type() {}

func (*Schema_BooleanItem) isSchema_Type() {}

type StringItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format  *string      `protobuf:"bytes,1,opt,name=format,proto3,oneof" json:"format,omitempty"`
	Example *string      `protobuf:"bytes,2,opt,name=example,proto3,oneof" json:"example,omitempty"`
	Rules   *StringRules `protobuf:"bytes,3,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *StringItem) Reset() {
	*x = StringItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringItem) ProtoMessage() {}

func (x *StringItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringItem.ProtoReflect.Descriptor instead.
func (*StringItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{1}
}

func (x *StringItem) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *StringItem) GetExample() string {
	if x != nil && x.Example != nil {
		return *x.Example
	}
	return ""
}

func (x *StringItem) GetRules() *StringRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type StringRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pattern   *string `protobuf:"bytes,1,opt,name=pattern,proto3,oneof" json:"pattern,omitempty"`
	MinLength *uint64 `protobuf:"varint,2,opt,name=min_length,json=minLength,proto3,oneof" json:"min_length,omitempty"`
	MaxLength *uint64 `protobuf:"varint,3,opt,name=max_length,json=maxLength,proto3,oneof" json:"max_length,omitempty"`
}

func (x *StringRules) Reset() {
	*x = StringRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringRules) ProtoMessage() {}

func (x *StringRules) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringRules.ProtoReflect.Descriptor instead.
func (*StringRules) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{2}
}

func (x *StringRules) GetPattern() string {
	if x != nil && x.Pattern != nil {
		return *x.Pattern
	}
	return ""
}

func (x *StringRules) GetMinLength() uint64 {
	if x != nil && x.MinLength != nil {
		return *x.MinLength
	}
	return 0
}

func (x *StringRules) GetMaxLength() uint64 {
	if x != nil && x.MaxLength != nil {
		return *x.MaxLength
	}
	return 0
}

type EnumItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*EnumItem_Value `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *EnumItem) Reset() {
	*x = EnumItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumItem) ProtoMessage() {}

func (x *EnumItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumItem.ProtoReflect.Descriptor instead.
func (*EnumItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{3}
}

func (x *EnumItem) GetOptions() []*EnumItem_Value {
	if x != nil {
		return x.Options
	}
	return nil
}

type NumberItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format string       `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	Rules  *NumberRules `protobuf:"bytes,2,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *NumberItem) Reset() {
	*x = NumberItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberItem) ProtoMessage() {}

func (x *NumberItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberItem.ProtoReflect.Descriptor instead.
func (*NumberItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{4}
}

func (x *NumberItem) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *NumberItem) GetRules() *NumberRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type NumberRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExclusiveMaximum *bool    `protobuf:"varint,1,opt,name=exclusive_maximum,json=exclusiveMaximum,proto3,oneof" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum *bool    `protobuf:"varint,2,opt,name=exclusive_minimum,json=exclusiveMinimum,proto3,oneof" json:"exclusive_minimum,omitempty"`
	Minimum          *float64 `protobuf:"fixed64,3,opt,name=minimum,proto3,oneof" json:"minimum,omitempty"`
	Maximum          *float64 `protobuf:"fixed64,4,opt,name=maximum,proto3,oneof" json:"maximum,omitempty"`
	MultipleOf       *float64 `protobuf:"fixed64,5,opt,name=multiple_of,json=multipleOf,proto3,oneof" json:"multiple_of,omitempty"`
}

func (x *NumberRules) Reset() {
	*x = NumberRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberRules) ProtoMessage() {}

func (x *NumberRules) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberRules.ProtoReflect.Descriptor instead.
func (*NumberRules) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{5}
}

func (x *NumberRules) GetExclusiveMaximum() bool {
	if x != nil && x.ExclusiveMaximum != nil {
		return *x.ExclusiveMaximum
	}
	return false
}

func (x *NumberRules) GetExclusiveMinimum() bool {
	if x != nil && x.ExclusiveMinimum != nil {
		return *x.ExclusiveMinimum
	}
	return false
}

func (x *NumberRules) GetMinimum() float64 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return 0
}

func (x *NumberRules) GetMaximum() float64 {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return 0
}

func (x *NumberRules) GetMultipleOf() float64 {
	if x != nil && x.MultipleOf != nil {
		return *x.MultipleOf
	}
	return 0
}

type IntegerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format string        `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	Rules  *IntegerRules `protobuf:"bytes,2,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *IntegerItem) Reset() {
	*x = IntegerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerItem) ProtoMessage() {}

func (x *IntegerItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerItem.ProtoReflect.Descriptor instead.
func (*IntegerItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{6}
}

func (x *IntegerItem) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *IntegerItem) GetRules() *IntegerRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type IntegerRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExclusiveMaximum *bool  `protobuf:"varint,1,opt,name=exclusive_maximum,json=exclusiveMaximum,proto3,oneof" json:"exclusive_maximum,omitempty"`
	ExclusiveMinimum *bool  `protobuf:"varint,2,opt,name=exclusive_minimum,json=exclusiveMinimum,proto3,oneof" json:"exclusive_minimum,omitempty"`
	Minimum          *int64 `protobuf:"varint,3,opt,name=minimum,proto3,oneof" json:"minimum,omitempty"`
	Maximum          *int64 `protobuf:"varint,4,opt,name=maximum,proto3,oneof" json:"maximum,omitempty"`
	MultipleOf       *int64 `protobuf:"varint,5,opt,name=multiple_of,json=multipleOf,proto3,oneof" json:"multiple_of,omitempty"`
}

func (x *IntegerRules) Reset() {
	*x = IntegerRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegerRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerRules) ProtoMessage() {}

func (x *IntegerRules) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerRules.ProtoReflect.Descriptor instead.
func (*IntegerRules) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{7}
}

func (x *IntegerRules) GetExclusiveMaximum() bool {
	if x != nil && x.ExclusiveMaximum != nil {
		return *x.ExclusiveMaximum
	}
	return false
}

func (x *IntegerRules) GetExclusiveMinimum() bool {
	if x != nil && x.ExclusiveMinimum != nil {
		return *x.ExclusiveMinimum
	}
	return false
}

func (x *IntegerRules) GetMinimum() int64 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return 0
}

func (x *IntegerRules) GetMaximum() int64 {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return 0
}

func (x *IntegerRules) GetMultipleOf() int64 {
	if x != nil && x.MultipleOf != nil {
		return *x.MultipleOf
	}
	return 0
}

type BooleanItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules *BooleanRules `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *BooleanItem) Reset() {
	*x = BooleanItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanItem) ProtoMessage() {}

func (x *BooleanItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanItem.ProtoReflect.Descriptor instead.
func (*BooleanItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{8}
}

func (x *BooleanItem) GetRules() *BooleanRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type BooleanRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Const *bool `protobuf:"varint,1,opt,name=const,proto3,oneof" json:"const,omitempty"`
}

func (x *BooleanRules) Reset() {
	*x = BooleanRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanRules) ProtoMessage() {}

func (x *BooleanRules) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanRules.ProtoReflect.Descriptor instead.
func (*BooleanRules) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{9}
}

func (x *BooleanRules) GetConst() bool {
	if x != nil && x.Const != nil {
		return *x.Const
	}
	return false
}

type ArrayItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules *ArrayRules `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
	Items *Schema     `protobuf:"bytes,2,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ArrayItem) Reset() {
	*x = ArrayItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayItem) ProtoMessage() {}

func (x *ArrayItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayItem.ProtoReflect.Descriptor instead.
func (*ArrayItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{10}
}

func (x *ArrayItem) GetRules() *ArrayRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ArrayItem) GetItems() *Schema {
	if x != nil {
		return x.Items
	}
	return nil
}

type ArrayRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinItems    *uint64 `protobuf:"varint,1,opt,name=min_items,json=minItems,proto3,oneof" json:"min_items,omitempty"`
	MaxItems    *uint64 `protobuf:"varint,2,opt,name=max_items,json=maxItems,proto3,oneof" json:"max_items,omitempty"`
	UniqueItems *bool   `protobuf:"varint,3,opt,name=unique_items,json=uniqueItems,proto3,oneof" json:"unique_items,omitempty"`
}

func (x *ArrayRules) Reset() {
	*x = ArrayRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayRules) ProtoMessage() {}

func (x *ArrayRules) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayRules.ProtoReflect.Descriptor instead.
func (*ArrayRules) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{11}
}

func (x *ArrayRules) GetMinItems() uint64 {
	if x != nil && x.MinItems != nil {
		return *x.MinItems
	}
	return 0
}

func (x *ArrayRules) GetMaxItems() uint64 {
	if x != nil && x.MaxItems != nil {
		return *x.MaxItems
	}
	return 0
}

func (x *ArrayRules) GetUniqueItems() bool {
	if x != nil && x.UniqueItems != nil {
		return *x.UniqueItems
	}
	return false
}

type ObjectProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema             *Schema `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Name               string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Required           bool    `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	ExplicitlyOptional bool    `protobuf:"varint,5,opt,name=explicitly_optional,json=explicitlyOptional,proto3" json:"explicitly_optional,omitempty"`
	ReadOnly           bool    `protobuf:"varint,6,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	WriteOnly          bool    `protobuf:"varint,7,opt,name=write_only,json=writeOnly,proto3" json:"write_only,omitempty"`
	Description        string  `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	ProtoFieldName     string  `protobuf:"bytes,9,opt,name=proto_field_name,json=protoFieldName,proto3" json:"proto_field_name,omitempty"`
	ProtoFieldNumber   int32   `protobuf:"varint,10,opt,name=proto_field_number,json=protoFieldNumber,proto3" json:"proto_field_number,omitempty"`
}

func (x *ObjectProperty) Reset() {
	*x = ObjectProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectProperty) ProtoMessage() {}

func (x *ObjectProperty) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectProperty.ProtoReflect.Descriptor instead.
func (*ObjectProperty) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{12}
}

func (x *ObjectProperty) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *ObjectProperty) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectProperty) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ObjectProperty) GetExplicitlyOptional() bool {
	if x != nil {
		return x.ExplicitlyOptional
	}
	return false
}

func (x *ObjectProperty) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *ObjectProperty) GetWriteOnly() bool {
	if x != nil {
		return x.WriteOnly
	}
	return false
}

func (x *ObjectProperty) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ObjectProperty) GetProtoFieldName() string {
	if x != nil {
		return x.ProtoFieldName
	}
	return ""
}

func (x *ObjectProperty) GetProtoFieldNumber() int32 {
	if x != nil {
		return x.ProtoFieldNumber
	}
	return 0
}

type ObjectItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules                *ObjectRules      `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
	Properties           []*ObjectProperty `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	AdditionalProperties bool              `protobuf:"varint,3,opt,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty"`
	ProtoMessageName     string            `protobuf:"bytes,4,opt,name=proto_message_name,json=protoMessageName,proto3" json:"proto_message_name,omitempty"`
	ProtoFullName        string            `protobuf:"bytes,5,opt,name=proto_full_name,json=protoFullName,proto3" json:"proto_full_name,omitempty"`
	// TODO: These may not be appropriate
	GoPackageName   string `protobuf:"bytes,6,opt,name=go_package_name,json=goPackageName,proto3" json:"go_package_name,omitempty"`
	GoTypeName      string `protobuf:"bytes,7,opt,name=go_type_name,json=goTypeName,proto3" json:"go_type_name,omitempty"`
	GrpcPackageName string `protobuf:"bytes,8,opt,name=grpc_package_name,json=grpcPackageName,proto3" json:"grpc_package_name,omitempty"`
}

func (x *ObjectItem) Reset() {
	*x = ObjectItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectItem) ProtoMessage() {}

func (x *ObjectItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectItem.ProtoReflect.Descriptor instead.
func (*ObjectItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{13}
}

func (x *ObjectItem) GetRules() *ObjectRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ObjectItem) GetProperties() []*ObjectProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ObjectItem) GetAdditionalProperties() bool {
	if x != nil {
		return x.AdditionalProperties
	}
	return false
}

func (x *ObjectItem) GetProtoMessageName() string {
	if x != nil {
		return x.ProtoMessageName
	}
	return ""
}

func (x *ObjectItem) GetProtoFullName() string {
	if x != nil {
		return x.ProtoFullName
	}
	return ""
}

func (x *ObjectItem) GetGoPackageName() string {
	if x != nil {
		return x.GoPackageName
	}
	return ""
}

func (x *ObjectItem) GetGoTypeName() string {
	if x != nil {
		return x.GoTypeName
	}
	return ""
}

func (x *ObjectItem) GetGrpcPackageName() string {
	if x != nil {
		return x.GrpcPackageName
	}
	return ""
}

type ObjectRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinProperties *uint64 `protobuf:"varint,1,opt,name=min_properties,json=minProperties,proto3,oneof" json:"min_properties,omitempty"`
	MaxProperties *uint64 `protobuf:"varint,2,opt,name=max_properties,json=maxProperties,proto3,oneof" json:"max_properties,omitempty"`
}

func (x *ObjectRules) Reset() {
	*x = ObjectRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectRules) ProtoMessage() {}

func (x *ObjectRules) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectRules.ProtoReflect.Descriptor instead.
func (*ObjectRules) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{14}
}

func (x *ObjectRules) GetMinProperties() uint64 {
	if x != nil && x.MinProperties != nil {
		return *x.MinProperties
	}
	return 0
}

func (x *ObjectRules) GetMaxProperties() uint64 {
	if x != nil && x.MaxProperties != nil {
		return *x.MaxProperties
	}
	return 0
}

// Similar to ObjectItem (it is an object in JSON Schema), but where exactly one
// property should be set
type OneofWrapperItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules            *OneofRules       `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
	Properties       []*ObjectProperty `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	ProtoMessageName string            `protobuf:"bytes,4,opt,name=proto_message_name,json=protoMessageName,proto3" json:"proto_message_name,omitempty"`
	ProtoFullName    string            `protobuf:"bytes,5,opt,name=proto_full_name,json=protoFullName,proto3" json:"proto_full_name,omitempty"`
	// TODO: These may not be appropriate
	GoPackageName   string `protobuf:"bytes,6,opt,name=go_package_name,json=goPackageName,proto3" json:"go_package_name,omitempty"`
	GoTypeName      string `protobuf:"bytes,7,opt,name=go_type_name,json=goTypeName,proto3" json:"go_type_name,omitempty"`
	GrpcPackageName string `protobuf:"bytes,8,opt,name=grpc_package_name,json=grpcPackageName,proto3" json:"grpc_package_name,omitempty"`
}

func (x *OneofWrapperItem) Reset() {
	*x = OneofWrapperItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneofWrapperItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofWrapperItem) ProtoMessage() {}

func (x *OneofWrapperItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofWrapperItem.ProtoReflect.Descriptor instead.
func (*OneofWrapperItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{15}
}

func (x *OneofWrapperItem) GetRules() *OneofRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *OneofWrapperItem) GetProperties() []*ObjectProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *OneofWrapperItem) GetProtoMessageName() string {
	if x != nil {
		return x.ProtoMessageName
	}
	return ""
}

func (x *OneofWrapperItem) GetProtoFullName() string {
	if x != nil {
		return x.ProtoFullName
	}
	return ""
}

func (x *OneofWrapperItem) GetGoPackageName() string {
	if x != nil {
		return x.GoPackageName
	}
	return ""
}

func (x *OneofWrapperItem) GetGoTypeName() string {
	if x != nil {
		return x.GoTypeName
	}
	return ""
}

func (x *OneofWrapperItem) GetGrpcPackageName() string {
	if x != nil {
		return x.GrpcPackageName
	}
	return ""
}

type OneofRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OneofRules) Reset() {
	*x = OneofRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneofRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofRules) ProtoMessage() {}

func (x *OneofRules) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofRules.ProtoReflect.Descriptor instead.
func (*OneofRules) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{16}
}

type MapItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemSchema *Schema   `protobuf:"bytes,1,opt,name=item_schema,json=itemSchema,proto3" json:"item_schema,omitempty"`
	Rules      *MapRules `protobuf:"bytes,2,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *MapItem) Reset() {
	*x = MapItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapItem) ProtoMessage() {}

func (x *MapItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapItem.ProtoReflect.Descriptor instead.
func (*MapItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{17}
}

func (x *MapItem) GetItemSchema() *Schema {
	if x != nil {
		return x.ItemSchema
	}
	return nil
}

func (x *MapItem) GetRules() *MapRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type MapRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MapRules) Reset() {
	*x = MapRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapRules) ProtoMessage() {}

func (x *MapRules) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapRules.ProtoReflect.Descriptor instead.
func (*MapRules) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{18}
}

// Allows anything
type EmptySchemmaItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptySchemmaItem) Reset() {
	*x = EmptySchemmaItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptySchemmaItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptySchemmaItem) ProtoMessage() {}

func (x *EmptySchemmaItem) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptySchemmaItem.ProtoReflect.Descriptor instead.
func (*EmptySchemmaItem) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{19}
}

type EnumItem_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number      int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *EnumItem_Value) Reset() {
	*x = EnumItem_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jsonapi_v1_schema_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumItem_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumItem_Value) ProtoMessage() {}

func (x *EnumItem_Value) ProtoReflect() protoreflect.Message {
	mi := &file_jsonapi_v1_schema_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumItem_Value.ProtoReflect.Descriptor instead.
func (*EnumItem_Value) Descriptor() ([]byte, []int) {
	return file_jsonapi_v1_schema_proto_rawDescGZIP(), []int{3, 0}
}

func (x *EnumItem_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnumItem_Value) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *EnumItem_Value) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_jsonapi_v1_schema_proto protoreflect.FileDescriptor

var file_jsonapi_v1_schema_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x8d, 0x05, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x6d, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0d,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x09,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x0a, 0x0b, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x07, 0x6d,
	0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6a, 0x73,
	0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x3c, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x33, 0x0a, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6e, 0x75, 0x6d,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6a, 0x73, 0x6f, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x3c, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x69, 0x6e,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x97, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x75, 0x6d,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x55, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x53, 0x0a, 0x0a, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x0b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x07, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x61, 0x78,
	0x69, 0x6d, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52,
	0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x66, 0x88, 0x01, 0x01, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78,
	0x69, 0x6d, 0x75, 0x6d, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f,
	0x6f, 0x66, 0x22, 0x55, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xaa, 0x02, 0x0a, 0x0c, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x76, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03,
	0x52, 0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x04, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x66, 0x88,
	0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x22, 0x3d, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x09, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xa5, 0x01, 0x0a, 0x0a, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd3, 0x02, 0x0a, 0x0e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x73, 0x6f,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x6c, 0x79, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xf8, 0x02,
	0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x73,
	0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x6f, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6f, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x6f,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72, 0x70, 0x63, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x0d,
	0x6d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xc8, 0x02, 0x0a, 0x10, 0x4f, 0x6e, 0x65, 0x6f, 0x66,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x0a, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6a, 0x73, 0x6f,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x67,
	0x6f, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x67, 0x72, 0x70, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22,
	0x6a, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x0b, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x2a, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x0a, 0x0a, 0x08, 0x4d,
	0x61, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x6d, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x2e, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x74, 0x6f, 0x70,
	0x73, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_jsonapi_v1_schema_proto_rawDescOnce sync.Once
	file_jsonapi_v1_schema_proto_rawDescData = file_jsonapi_v1_schema_proto_rawDesc
)

func file_jsonapi_v1_schema_proto_rawDescGZIP() []byte {
	file_jsonapi_v1_schema_proto_rawDescOnce.Do(func() {
		file_jsonapi_v1_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_jsonapi_v1_schema_proto_rawDescData)
	})
	return file_jsonapi_v1_schema_proto_rawDescData
}

var file_jsonapi_v1_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_jsonapi_v1_schema_proto_goTypes = []interface{}{
	(*Schema)(nil),           // 0: jsonapi.v1.Schema
	(*StringItem)(nil),       // 1: jsonapi.v1.StringItem
	(*StringRules)(nil),      // 2: jsonapi.v1.StringRules
	(*EnumItem)(nil),         // 3: jsonapi.v1.EnumItem
	(*NumberItem)(nil),       // 4: jsonapi.v1.NumberItem
	(*NumberRules)(nil),      // 5: jsonapi.v1.NumberRules
	(*IntegerItem)(nil),      // 6: jsonapi.v1.IntegerItem
	(*IntegerRules)(nil),     // 7: jsonapi.v1.IntegerRules
	(*BooleanItem)(nil),      // 8: jsonapi.v1.BooleanItem
	(*BooleanRules)(nil),     // 9: jsonapi.v1.BooleanRules
	(*ArrayItem)(nil),        // 10: jsonapi.v1.ArrayItem
	(*ArrayRules)(nil),       // 11: jsonapi.v1.ArrayRules
	(*ObjectProperty)(nil),   // 12: jsonapi.v1.ObjectProperty
	(*ObjectItem)(nil),       // 13: jsonapi.v1.ObjectItem
	(*ObjectRules)(nil),      // 14: jsonapi.v1.ObjectRules
	(*OneofWrapperItem)(nil), // 15: jsonapi.v1.OneofWrapperItem
	(*OneofRules)(nil),       // 16: jsonapi.v1.OneofRules
	(*MapItem)(nil),          // 17: jsonapi.v1.MapItem
	(*MapRules)(nil),         // 18: jsonapi.v1.MapRules
	(*EmptySchemmaItem)(nil), // 19: jsonapi.v1.EmptySchemmaItem
	(*EnumItem_Value)(nil),   // 20: jsonapi.v1.EnumItem.Value
}
var file_jsonapi_v1_schema_proto_depIdxs = []int32{
	19, // 0: jsonapi.v1.Schema.empty:type_name -> jsonapi.v1.EmptySchemmaItem
	15, // 1: jsonapi.v1.Schema.oneof_wrapper:type_name -> jsonapi.v1.OneofWrapperItem
	10, // 2: jsonapi.v1.Schema.array_item:type_name -> jsonapi.v1.ArrayItem
	13, // 3: jsonapi.v1.Schema.object_item:type_name -> jsonapi.v1.ObjectItem
	17, // 4: jsonapi.v1.Schema.map_item:type_name -> jsonapi.v1.MapItem
	1,  // 5: jsonapi.v1.Schema.string_item:type_name -> jsonapi.v1.StringItem
	6,  // 6: jsonapi.v1.Schema.integer_item:type_name -> jsonapi.v1.IntegerItem
	3,  // 7: jsonapi.v1.Schema.enum_item:type_name -> jsonapi.v1.EnumItem
	4,  // 8: jsonapi.v1.Schema.number_item:type_name -> jsonapi.v1.NumberItem
	8,  // 9: jsonapi.v1.Schema.boolean_item:type_name -> jsonapi.v1.BooleanItem
	2,  // 10: jsonapi.v1.StringItem.rules:type_name -> jsonapi.v1.StringRules
	20, // 11: jsonapi.v1.EnumItem.options:type_name -> jsonapi.v1.EnumItem.Value
	5,  // 12: jsonapi.v1.NumberItem.rules:type_name -> jsonapi.v1.NumberRules
	7,  // 13: jsonapi.v1.IntegerItem.rules:type_name -> jsonapi.v1.IntegerRules
	9,  // 14: jsonapi.v1.BooleanItem.rules:type_name -> jsonapi.v1.BooleanRules
	11, // 15: jsonapi.v1.ArrayItem.rules:type_name -> jsonapi.v1.ArrayRules
	0,  // 16: jsonapi.v1.ArrayItem.items:type_name -> jsonapi.v1.Schema
	0,  // 17: jsonapi.v1.ObjectProperty.schema:type_name -> jsonapi.v1.Schema
	14, // 18: jsonapi.v1.ObjectItem.rules:type_name -> jsonapi.v1.ObjectRules
	12, // 19: jsonapi.v1.ObjectItem.properties:type_name -> jsonapi.v1.ObjectProperty
	16, // 20: jsonapi.v1.OneofWrapperItem.rules:type_name -> jsonapi.v1.OneofRules
	12, // 21: jsonapi.v1.OneofWrapperItem.properties:type_name -> jsonapi.v1.ObjectProperty
	0,  // 22: jsonapi.v1.MapItem.item_schema:type_name -> jsonapi.v1.Schema
	18, // 23: jsonapi.v1.MapItem.rules:type_name -> jsonapi.v1.MapRules
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_jsonapi_v1_schema_proto_init() }
func file_jsonapi_v1_schema_proto_init() {
	if File_jsonapi_v1_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jsonapi_v1_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegerRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneofWrapperItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneofRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptySchemmaItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jsonapi_v1_schema_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumItem_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jsonapi_v1_schema_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Schema_Ref)(nil),
		(*Schema_Empty)(nil),
		(*Schema_OneofWrapper)(nil),
		(*Schema_ArrayItem)(nil),
		(*Schema_ObjectItem)(nil),
		(*Schema_MapItem)(nil),
		(*Schema_StringItem)(nil),
		(*Schema_IntegerItem)(nil),
		(*Schema_EnumItem)(nil),
		(*Schema_NumberItem)(nil),
		(*Schema_BooleanItem)(nil),
	}
	file_jsonapi_v1_schema_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_jsonapi_v1_schema_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_jsonapi_v1_schema_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_jsonapi_v1_schema_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_jsonapi_v1_schema_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_jsonapi_v1_schema_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_jsonapi_v1_schema_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jsonapi_v1_schema_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_jsonapi_v1_schema_proto_goTypes,
		DependencyIndexes: file_jsonapi_v1_schema_proto_depIdxs,
		MessageInfos:      file_jsonapi_v1_schema_proto_msgTypes,
	}.Build()
	File_jsonapi_v1_schema_proto = out.File
	file_jsonapi_v1_schema_proto_rawDesc = nil
	file_jsonapi_v1_schema_proto_goTypes = nil
	file_jsonapi_v1_schema_proto_depIdxs = nil
}
