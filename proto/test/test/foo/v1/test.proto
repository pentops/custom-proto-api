syntax = "proto3";

package test.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "j5/ext/v1/annotations.proto";

option go_package = "github.com/pentops/j5/gen/test/foo/v1/foo_testpb";

service FooService {
  rpc GetFoo(GetFooRequest) returns (GetFooResponse) {
    option (google.api.http) = {get: "/test/v1/foo/{id}"};
  }

  // PostFoo Comment
  rpc PostFoo(PostFooRequest) returns (PostFooResponse) {
    option (google.api.http) = {
      post: "/test/v1/foo"
      body: "*"
    };
  }
}

// Leading GetFooRequest Comment
message GetFooRequest { // Comment on message line
  string id = 1;
  int64 number = 2;

  // Commant before numbers
  repeated float numbers = 3; // Comment on field line

  ABMessage ab = 4; // Comment on ab
  string multiple_word = 5;

  QueryRequest query = 100;
}

// Minimal copy from protostate to avoid import
message QueryRequest {
  repeated Filter filters = 3;

  message Filter {
    oneof type {
      option (j5.ext.v1.oneof).expose = true;

      //option (j5.ext.v1.message).is_oneof_wrapper = true;
      Field field = 1;
      And and = 2;
      Or or = 3;
    }
  }

  message And {
    repeated Filter filters = 1;
  }

  message Or {
    repeated Filter filters = 1;
  }

  message Field {
    string name = 1;
    oneof type {
      option (j5.ext.v1.oneof).expose = true;
      string value = 2;
    }
  }
}

// Multi
// Line
// Comment
message ABMessage {
  string a = 1;
  string b = 2;
}

// First Detached
// Multiline Comment

// Second Detached Comment

// GetFooResponse Comment
message GetFooResponse {
  string id = 1;
  string name = 2;
  string field = 3;
}

message PostFooRequest {
  string id = 1;
}

message Bar {
  string id = 1;
  string name = 2;
  string field = 3;

  message Nest1 {
    string nest1_id = 1;

    message Nest2 {
      string nest2_id = 1;
      Nenum nest2_enum = 2;
    }
  }

  Nest1 nest1 = 4;

  Nest1.Nest2 nest2 = 5;

  enum Nenum {
    NENUM_UNSPECIFIED = 0;
    NENUM_VALUE1 = 1;
    NENUM_VALUE2 = 2;
  }

  Nenum nenum = 6;
}

message PostFooResponse {
  string id = 1;
  string name = 2;
  string field = 3;
}

service FooTopic {
  rpc Foo(FooMessage) returns (google.protobuf.Empty) {}
}

message FooMessage {
  string id = 1;
  string name = 2;
  string field = 3;

  Bar.Nest1.Nest2 nest2 = 4;
}
